{"version":3,"sources":["./node_modules/ngx-angular-autocomplete/__ivy_ngcc__/fesm2015/ngx-angular-autocomplete.js"],"names":[],"mappings":"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","file":"default~aboutus-aboutus-module~agent-agent-module~developers-developers-module~directory-directory-m~6aa55dbe-es2015.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, Input, ViewChild, Output, Directive, ElementRef, HostListener, NgModule } from '@angular/core';\nimport { of, fromEvent } from 'rxjs';\nimport { map, debounceTime, tap, switchMap } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-autocomplete.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"searchInput\"];\nconst _c1 = function (a0) { return { \"suggestion-active\": a0 }; };\nfunction NgxAutocompleteComponent_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxAutocompleteComponent_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const entry_r4 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.setValue(entry_r4); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const entry_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"list\", i_r5, \"\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c1, i_r5 == ctx_r1.activeSuggestion));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", entry_r4[ctx_r1.searchKeyword], \" \");\n} }\nfunction NgxAutocompleteComponent_a_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\");\n    ɵngcc0.ɵɵtext(1, \"No Data Found\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgxAutocompleteComponent_a_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\");\n    ɵngcc0.ɵɵtext(1, \"Searching...\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nclass NgxAutocompleteService {\n    constructor() { }\n}\nNgxAutocompleteService.ɵfac = function NgxAutocompleteService_Factory(t) { return new (t || NgxAutocompleteService)(); };\nNgxAutocompleteService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxAutocompleteService, factory: NgxAutocompleteService.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nNgxAutocompleteService.ctorParameters = () => [];\n/** @nocollapse */ NgxAutocompleteService.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgxAutocompleteService_Factory() { return new NgxAutocompleteService(); }, token: NgxAutocompleteService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxAutocompleteService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-autocomplete.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxAutocompleteComponent {\n    constructor() {\n        this.selectedValue = new EventEmitter();\n        this.data = [];\n        this.showSearches = false;\n        this.isSearching = false;\n        this.activeSuggestion = 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSearch();\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getData(name) {\n        /** @type {?} */\n        let data = this.entries.filter((/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => {\n            return val[this.searchKeyword].toLowerCase().includes(name.toLowerCase()) == true;\n        }));\n        return of(data);\n    }\n    /**\n     * @return {?}\n     */\n    dataSearch() {\n        /** @type {?} */\n        const search$ = fromEvent(this.searchInput.nativeElement, 'input').pipe(map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.target.value)), debounceTime(500), tap((/**\n         * @return {?}\n         */\n        () => this.isSearching = true)), switchMap((/**\n         * @param {?} term\n         * @return {?}\n         */\n        (term) => term ? this.getData(term) : of([]))), tap((/**\n         * @return {?}\n         */\n        () => {\n            this.isSearching = false,\n                this.showSearches = true;\n        })));\n        search$.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this.isSearching = false;\n            this.data = data;\n        }));\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    setValue(data) {\n        /** @type {?} */\n        let value = data[this.searchKeyword];\n        this.searchInput.nativeElement.value = value;\n        this.data = [data];\n        this.activeSuggestion = 0;\n        this.selectedValue.emit(data);\n        this.showSearches = false;\n    }\n    /**\n     * @param {?} index\n     * @param {?} item\n     * @return {?}\n     */\n    trackById(index, item) {\n        return item._id;\n    }\n    /**\n     * @return {?}\n     */\n    closeDropDown() {\n        this.showSearches = false;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    changeSuggestion(e) {\n        if (e.keyCode === 13) {\n            if (this.data.length != 0) {\n                this.setValue(this.data[this.activeSuggestion]);\n                this.scrollTo();\n            }\n        }\n        // User pressed the up arrow\n        else if (e.keyCode == 38) {\n            if (this.activeSuggestion == 0) {\n                return false;\n            }\n            else {\n                this.activeSuggestion = this.activeSuggestion - 1;\n                this.scrollTo();\n            }\n        }\n        // User pressed the down arrow\n        else if (e.keyCode == 40) {\n            if (this.activeSuggestion == this.data.length - 1) {\n                return false;\n            }\n            else {\n                this.activeSuggestion = this.activeSuggestion + 1;\n                this.scrollTo();\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    scrollTo() {\n        /** @type {?} */\n        let str = `list${this.activeSuggestion}`;\n        /** @type {?} */\n        let elmnt = document.getElementById(str);\n        elmnt.scrollIntoView();\n        window.scrollTo(0, 0);\n    }\n}\nNgxAutocompleteComponent.ɵfac = function NgxAutocompleteComponent_Factory(t) { return new (t || NgxAutocompleteComponent)(); };\nNgxAutocompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxAutocompleteComponent, selectors: [[\"ngx-autocomplete\"]], viewQuery: function NgxAutocompleteComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n    } }, inputs: { entries: \"entries\", placeholderValue: \"placeholderValue\", inputId: \"inputId\", searchKeyword: \"searchKeyword\" }, outputs: { selectedValue: \"selectedValue\" }, decls: 7, vars: 9, consts: [[1, \"position-relative\"], [\"type\", \"text\", \"id\", \"auto-search\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\", \"id\", \"click\", \"keyup\"], [\"searchInput\", \"\"], [\"clickOutside\", \"\", 1, \"dropdown-content\", 3, \"id\", \"inputId\", \"hidden\", \"clickOutside\"], [\"tappable\", \"\", 3, \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"tappable\", \"\", 3, \"ngClass\", \"id\", \"click\"]], template: function NgxAutocompleteComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function NgxAutocompleteComponent_Template_input_click_1_listener() { return ctx.showSearches = true; })(\"keyup\", function NgxAutocompleteComponent_Template_input_keyup_1_listener($event) { return ctx.changeSuggestion($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵlistener(\"clickOutside\", function NgxAutocompleteComponent_Template_div_clickOutside_3_listener() { return ctx.closeDropDown(); });\n        ɵngcc0.ɵɵtemplate(4, NgxAutocompleteComponent_a_4_Template, 2, 5, \"a\", 4);\n        ɵngcc0.ɵɵtemplate(5, NgxAutocompleteComponent_a_5_Template, 2, 0, \"a\", 5);\n        ɵngcc0.ɵɵtemplate(6, NgxAutocompleteComponent_a_6_Template, 2, 0, \"a\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"placeholder\", ctx.placeholderValue)(\"id\", ctx.inputId + 1);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId + 2)(\"inputId\", ctx.inputId + 1)(\"hidden\", !ctx.showSearches);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackById);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.data && ctx.data.length <= 0 && !ctx.isSearching);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isSearching);\n    } }, directives: function () { return [DropdownDirective, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgClass]; }, styles: [\".dropdown-content[_ngcontent-%COMP%] {\\n      background-color: #fafafa;\\n      width: 100%;\\n      max-height: 150px;\\n      overflow-y: auto;\\n      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n      z-index: 1;\\n      cursor: pointer;\\n    }\\n\\n    .dropdown-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n      color: black;\\n      padding: 15px 18px;\\n      text-decoration: none;\\n      display: block;\\n    }\\n\\n    .suggestion-active[_ngcontent-%COMP%], .dropdown-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {background-color: #f1f1f1}\\n\\n    input[_ngcontent-%COMP%] {\\n      width: 100%;\\n      padding: 12px 20px;\\n      margin: 8px 0;\\n      box-sizing: border-box;\\n    }\"] });\n/** @nocollapse */\nNgxAutocompleteComponent.ctorParameters = () => [];\nNgxAutocompleteComponent.propDecorators = {\n    entries: [{ type: Input }],\n    placeholderValue: [{ type: Input }],\n    inputId: [{ type: Input }],\n    searchKeyword: [{ type: Input }],\n    searchInput: [{ type: ViewChild, args: ['searchInput', { static: true },] }],\n    selectedValue: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxAutocompleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-autocomplete',\n                template: `\n    <div class=\"position-relative\">\n\n    <input type=\"text\" class=\"form-control\" [placeholder]=\"placeholderValue\" id=\"auto-search\" #searchInput autocomplete=\"off\" [id]=\"inputId+1\" (click)=\"showSearches = true\" (keyup)=\"changeSuggestion($event)\">\n    \n    <div [id]=\"inputId+2\" clickOutside (clickOutside)=\"closeDropDown()\" [inputId]=\"inputId+1\" [hidden]=\"!showSearches\" class=\"dropdown-content\">\n        <a *ngFor=\"let entry of data; trackBy: trackById;let i = index\" tappable (click)=\"setValue(entry)\"  [ngClass]=\"{ 'suggestion-active' : i == activeSuggestion} \" id=\"list{{i}}\">\n                {{entry[searchKeyword] }}   \n        </a>\n        <a *ngIf=\"data && data.length <= 0 && !isSearching\" >No Data Found</a>\n        <a *ngIf=\"isSearching\">Searching...</a>\n    </div>\n    \n  </div>\n  `,\n                styles: [`\n  \n    .dropdown-content {\n      background-color: #fafafa;\n      width: 100%;\n      max-height: 150px;\n      overflow-y: auto;\n      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n      z-index: 1;\n      cursor: pointer;\n    }\n\n    .dropdown-content a {\n      color: black;\n      padding: 15px 18px;\n      text-decoration: none;\n      display: block;\n    }\n\n    .suggestion-active, .dropdown-content a:hover {background-color: #f1f1f1}\n\n    input {\n      width: 100%;\n      padding: 12px 20px;\n      margin: 8px 0;\n      box-sizing: border-box;\n    }\n \n  `]\n            }]\n    }], function () { return []; }, { selectedValue: [{\n            type: Output\n        }], entries: [{\n            type: Input\n        }], placeholderValue: [{\n            type: Input\n        }], inputId: [{\n            type: Input\n        }], searchKeyword: [{\n            type: Input\n        }], searchInput: [{\n            type: ViewChild,\n            args: ['searchInput', { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.entries;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.placeholderValue;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.inputId;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.searchKeyword;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.searchInput;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.selectedValue;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.data;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.showSearches;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.isSearching;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.activeSuggestion;\n    /** @type {?} */\n    NgxAutocompleteComponent.prototype.searchValue;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/dropdown.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DropdownDirective {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n        this.clickOutside = new EventEmitter();\n    }\n    /**\n     * @param {?} targetElement\n     * @return {?}\n     */\n    onClick(targetElement) {\n        if (targetElement.id == this.inputId) {\n            return;\n        }\n        /** @type {?} */\n        const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!isClickedInside) {\n            this.clickOutside.emit(null);\n        }\n    }\n}\nDropdownDirective.ɵfac = function DropdownDirective_Factory(t) { return new (t || DropdownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDropdownDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DropdownDirective, selectors: [[\"\", \"clickOutside\", \"\"]], hostBindings: function DropdownDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function DropdownDirective_click_HostBindingHandler($event) { return ctx.onClick($event.target); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, inputs: { inputId: \"inputId\" }, outputs: { clickOutside: \"clickOutside\" } });\n/** @nocollapse */\nDropdownDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nDropdownDirective.propDecorators = {\n    clickOutside: [{ type: Output }],\n    inputId: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['document:click', ['$event.target'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[clickOutside]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { clickOutside: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['document:click', ['$event.target']]\n        }], inputId: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    DropdownDirective.prototype.clickOutside;\n    /** @type {?} */\n    DropdownDirective.prototype.inputId;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropdownDirective.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-autocomplete.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxAutocompleteModule {\n}\nNgxAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxAutocompleteModule });\nNgxAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxAutocompleteModule_Factory(t) { return new (t || NgxAutocompleteModule)(); }, imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxAutocompleteModule, { declarations: function () { return [NgxAutocompleteComponent,\n        DropdownDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxAutocompleteComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxAutocompleteComponent,\n                    DropdownDirective\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NgxAutocompleteComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-angular-autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxAutocompleteComponent, NgxAutocompleteModule, NgxAutocompleteService, DropdownDirective as ɵa };\n\n//# sourceMappingURL=ngx-angular-autocomplete.js.map"],"sourceRoot":"webpack:///"}