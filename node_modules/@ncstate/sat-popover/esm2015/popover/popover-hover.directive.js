/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input } from '@angular/core';
import { coerceNumberProperty } from '@angular/cdk/coercion';
import { of, Subject } from 'rxjs';
import { delay, switchMap, takeUntil } from 'rxjs/operators';
import { SatPopoverAnchor } from './popover-anchor.directive';
export class SatPopoverHoverDirective {
    /**
     * @param {?} anchor
     */
    constructor(anchor) {
        this.anchor = anchor;
        this._satPopoverHover = 0;
        /**
         * Emits when the directive is destroyed.
         */
        this._onDestroy = new Subject();
        /**
         * Emits when the user's mouse enters the element.
         */
        this._onMouseEnter = new Subject();
        /**
         * Emits when the user's mouse leaves the element.
         */
        this._onMouseLeave = new Subject();
    }
    /**
     * Amount of time to delay (ms) after hovering starts before
     * the popover opens. Defaults to 0ms.
     * @return {?}
     */
    get satPopoverHover() { return this._satPopoverHover; }
    /**
     * @param {?} val
     * @return {?}
     */
    set satPopoverHover(val) {
        this._satPopoverHover = coerceNumberProperty(val);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // Whenever the user hovers this host element, delay the configured
        // amount of time and open the popover. Terminate if the mouse leaves
        // the host element before the delay is complete.
        this._onMouseEnter
            .pipe(switchMap(() => {
            return of(null).pipe(delay(this._satPopoverHover || 0), takeUntil(this._onMouseLeave));
        }), takeUntil(this._onDestroy))
            .subscribe(() => this.anchor.openPopover());
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this._onDestroy.next();
        this._onDestroy.complete();
    }
    /**
     * @return {?}
     */
    showPopover() {
        this._onMouseEnter.next();
    }
    /**
     * @return {?}
     */
    closePopover() {
        this._onMouseLeave.next();
        this.anchor.closePopover();
    }
}
SatPopoverHoverDirective.decorators = [
    { type: Directive, args: [{
                selector: '[satPopoverHover]'
            },] }
];
/** @nocollapse */
SatPopoverHoverDirective.ctorParameters = () => [
    { type: SatPopoverAnchor }
];
SatPopoverHoverDirective.propDecorators = {
    satPopoverHover: [{ type: Input }],
    showPopover: [{ type: HostListener, args: ['mouseenter',] }],
    closePopover: [{ type: HostListener, args: ['mouseleave',] }]
};
if (false) {
    /** @type {?} */
    SatPopoverHoverDirective.prototype._satPopoverHover;
    /**
     * Emits when the directive is destroyed.
     * @type {?}
     */
    SatPopoverHoverDirective.prototype._onDestroy;
    /**
     * Emits when the user's mouse enters the element.
     * @type {?}
     */
    SatPopoverHoverDirective.prototype._onMouseEnter;
    /**
     * Emits when the user's mouse leaves the element.
     * @type {?}
     */
    SatPopoverHoverDirective.prototype._onMouseLeave;
    /** @type {?} */
    SatPopoverHoverDirective.prototype.anchor;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1ob3Zlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmNzdGF0ZS9zYXQtcG9wb3Zlci8iLCJzb3VyY2VzIjpbInBvcG92ZXIvcG9wb3Zlci1ob3Zlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDbkMsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFLOUQsTUFBTSxPQUFPLHdCQUF3Qjs7OztJQXFCbkMsWUFBbUIsTUFBd0I7UUFBeEIsV0FBTSxHQUFOLE1BQU0sQ0FBa0I7UUFYbkMscUJBQWdCLEdBQUcsQ0FBQyxDQUFDOzs7O1FBR3JCLGVBQVUsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDOzs7O1FBRzNCLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQVEsQ0FBQzs7OztRQUdwQyxrQkFBYSxHQUFHLElBQUksT0FBTyxFQUFRLENBQUM7SUFFRyxDQUFDOzs7Ozs7SUFoQmhELElBQ0ksZUFBZSxLQUFLLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQzs7Ozs7SUFDdkQsSUFBSSxlQUFlLENBQUMsR0FBVztRQUM3QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsb0JBQW9CLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEQsQ0FBQzs7OztJQWNELGVBQWU7UUFDYixtRUFBbUU7UUFDbkUscUVBQXFFO1FBQ3JFLGlEQUFpRDtRQUNqRCxJQUFJLENBQUMsYUFBYTthQUNmLElBQUksQ0FDSCxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ2IsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUNsQixLQUFLLENBQUMsSUFBSSxDQUFDLGdCQUFnQixJQUFJLENBQUMsQ0FBQyxFQUNqQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUM5QixDQUFDO1FBQ0osQ0FBQyxDQUFDLEVBQ0YsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FDM0I7YUFDQSxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFHRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM1QixDQUFDOzs7O0lBR0QsWUFBWTtRQUNWLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7WUF6REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7YUFDOUI7Ozs7WUFKUSxnQkFBZ0I7Ozs4QkFVdEIsS0FBSzswQkF3Q0wsWUFBWSxTQUFDLFlBQVk7MkJBS3pCLFlBQVksU0FBQyxZQUFZOzs7O0lBeEMxQixvREFBNkI7Ozs7O0lBRzdCLDhDQUFtQzs7Ozs7SUFHbkMsaURBQTRDOzs7OztJQUc1QyxpREFBNEM7O0lBRWhDLDBDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb2VyY2VOdW1iZXJQcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBvZiwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGVsYXksIHN3aXRjaE1hcCwgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQgeyBTYXRQb3BvdmVyQW5jaG9yIH0gZnJvbSAnLi9wb3BvdmVyLWFuY2hvci5kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbc2F0UG9wb3ZlckhvdmVyXSdcbn0pXG5leHBvcnQgY2xhc3MgU2F0UG9wb3ZlckhvdmVyRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgLyoqXG4gICAqIEFtb3VudCBvZiB0aW1lIHRvIGRlbGF5IChtcykgYWZ0ZXIgaG92ZXJpbmcgc3RhcnRzIGJlZm9yZVxuICAgKiB0aGUgcG9wb3ZlciBvcGVucy4gRGVmYXVsdHMgdG8gMG1zLlxuICAgKi9cbiAgQElucHV0KClcbiAgZ2V0IHNhdFBvcG92ZXJIb3ZlcigpIHsgcmV0dXJuIHRoaXMuX3NhdFBvcG92ZXJIb3ZlcjsgfVxuICBzZXQgc2F0UG9wb3ZlckhvdmVyKHZhbDogbnVtYmVyKSB7XG4gICAgdGhpcy5fc2F0UG9wb3ZlckhvdmVyID0gY29lcmNlTnVtYmVyUHJvcGVydHkodmFsKTtcbiAgfVxuICBwcml2YXRlIF9zYXRQb3BvdmVySG92ZXIgPSAwO1xuXG4gIC8qKiBFbWl0cyB3aGVuIHRoZSBkaXJlY3RpdmUgaXMgZGVzdHJveWVkLiAqL1xuICBwcml2YXRlIF9vbkRlc3Ryb3kgPSBuZXcgU3ViamVjdCgpO1xuXG4gIC8qKiBFbWl0cyB3aGVuIHRoZSB1c2VyJ3MgbW91c2UgZW50ZXJzIHRoZSBlbGVtZW50LiAqL1xuICBwcml2YXRlIF9vbk1vdXNlRW50ZXIgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gIC8qKiBFbWl0cyB3aGVuIHRoZSB1c2VyJ3MgbW91c2UgbGVhdmVzIHRoZSBlbGVtZW50LiAqL1xuICBwcml2YXRlIF9vbk1vdXNlTGVhdmUgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBhbmNob3I6IFNhdFBvcG92ZXJBbmNob3IpIHsgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAvLyBXaGVuZXZlciB0aGUgdXNlciBob3ZlcnMgdGhpcyBob3N0IGVsZW1lbnQsIGRlbGF5IHRoZSBjb25maWd1cmVkXG4gICAgLy8gYW1vdW50IG9mIHRpbWUgYW5kIG9wZW4gdGhlIHBvcG92ZXIuIFRlcm1pbmF0ZSBpZiB0aGUgbW91c2UgbGVhdmVzXG4gICAgLy8gdGhlIGhvc3QgZWxlbWVudCBiZWZvcmUgdGhlIGRlbGF5IGlzIGNvbXBsZXRlLlxuICAgIHRoaXMuX29uTW91c2VFbnRlclxuICAgICAgLnBpcGUoXG4gICAgICAgIHN3aXRjaE1hcCgoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIG9mKG51bGwpLnBpcGUoXG4gICAgICAgICAgICBkZWxheSh0aGlzLl9zYXRQb3BvdmVySG92ZXIgfHwgMCksXG4gICAgICAgICAgICB0YWtlVW50aWwodGhpcy5fb25Nb3VzZUxlYXZlKSxcbiAgICAgICAgICApO1xuICAgICAgICB9KSxcbiAgICAgICAgdGFrZVVudGlsKHRoaXMuX29uRGVzdHJveSksXG4gICAgICApXG4gICAgICAuc3Vic2NyaWJlKCgpID0+IHRoaXMuYW5jaG9yLm9wZW5Qb3BvdmVyKCkpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5fb25EZXN0cm95Lm5leHQoKTtcbiAgICB0aGlzLl9vbkRlc3Ryb3kuY29tcGxldGUoKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlZW50ZXInKVxuICBzaG93UG9wb3ZlcigpIHtcbiAgICB0aGlzLl9vbk1vdXNlRW50ZXIubmV4dCgpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScpXG4gIGNsb3NlUG9wb3ZlcigpIHtcbiAgICB0aGlzLl9vbk1vdXNlTGVhdmUubmV4dCgpO1xuICAgIHRoaXMuYW5jaG9yLmNsb3NlUG9wb3ZlcigpO1xuICB9XG59XG4iXX0=