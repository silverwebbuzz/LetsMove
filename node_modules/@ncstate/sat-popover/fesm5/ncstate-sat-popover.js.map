{"version":3,"file":"ncstate-sat-popover.js.map","sources":["ng://@ncstate/sat-popover/popover/popover.animations.ts","ng://@ncstate/sat-popover/popover/notification.service.ts","ng://@ncstate/sat-popover/popover/types.ts","ng://@ncstate/sat-popover/popover/popover.errors.ts","ng://@ncstate/sat-popover/popover/popover.component.ts","ng://@ncstate/sat-popover/popover/popover-anchoring.service.ts","ng://@ncstate/sat-popover/popover/popover-anchor.directive.ts","ng://@ncstate/sat-popover/popover/popover-hover.directive.ts","ng://@ncstate/sat-popover/popover/popover.module.ts"],"sourcesContent":["import {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport const transformPopover: AnimationTriggerMetadata = trigger('transformPopover', [\n  transition(':enter', [\n    style({opacity: 0, transform: 'scale(0.3)'}),\n    animate('{{openTransition}}',\n      style({opacity: 1, transform: 'scale(1)'}))\n  ]),\n  transition(':leave', [\n    animate('{{closeTransition}}',\n      style({opacity: 0, transform: 'scale(0.5)'}))\n  ])\n]);\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/** Enumerated actions for a popover to perform. */\nexport enum NotificationAction {\n  /** Popover should open. */\n  OPEN,\n  /** Popover should close. */\n  CLOSE,\n  /** Popover should toggle open or closed. */\n  TOGGLE,\n  /** Popover has new target positions. */\n  REPOSITION,\n  /** Popover needs new configuration. */\n  UPDATE_CONFIG,\n  /** Popover should realign itself to the anchor.  */\n  REALIGN,\n}\n\n/** Event object for dispatching to anchoring service. */\nexport class PopoverNotification {\n  constructor(\n    /** Action to perform. */\n    public action: NotificationAction,\n    /** Optional payload. */\n    public value?: any\n  ) { }\n}\n\n@Injectable()\nexport class PopoverNotificationService {\n\n  private store = new Subject<PopoverNotification>();\n\n  /** Dispatch a notification to all subscribers. */\n  dispatch(notification: PopoverNotification) {\n    this.store.next(notification);\n  }\n\n  /** Stream of notification events. */\n  events(): Observable<PopoverNotification> {\n    return this.store.asObservable();\n  }\n\n  /** Complete event stream. */\n  dispose(): void {\n    this.store.complete();\n  }\n\n}\n","export type SatPopoverScrollStrategy = 'noop' | 'block' | 'reposition' | 'close';\nexport const VALID_SCROLL: SatPopoverScrollStrategy[] = [\n  'noop',\n  'block',\n  'reposition',\n  'close'\n];\n\nexport type SatPopoverHorizontalAlign = 'before' | 'start' | 'center' | 'end' | 'after';\nexport const VALID_HORIZ_ALIGN: SatPopoverHorizontalAlign[] = [\n  'before',\n  'start',\n  'center',\n  'end',\n  'after'\n];\n\nexport type SatPopoverVerticalAlign = 'above'  | 'start' | 'center' | 'end' | 'below';\nexport const VALID_VERT_ALIGN: SatPopoverVerticalAlign[] = [\n  'above',\n  'start',\n  'center',\n  'end',\n  'below'\n];\n\nexport interface SatPopoverOpenOptions {\n  /**\n   * Whether the popover should return focus to the previously focused element after\n   * closing. Defaults to true.\n   */\n  restoreFocus?: boolean;\n\n  /** Whether the first focusable element should be focused on open. Defaults to true. */\n  autoFocus?: boolean;\n}\n","import { VALID_HORIZ_ALIGN, VALID_VERT_ALIGN, VALID_SCROLL } from './types';\n\nexport function getInvalidPopoverError(): Error {\n  return Error('SatPopoverAnchor must be provided an SatPopover component instance.');\n}\n\nexport function getUnanchoredPopoverError(): Error {\n  return Error('SatPopover is not anchored to any SatPopoverAnchor.');\n}\n\nexport function getInvalidHorizontalAlignError(alignment): Error {\n  return Error(generateGenericError('horizontalAlign/xAlign', alignment, VALID_HORIZ_ALIGN));\n}\n\nexport function getInvalidVerticalAlignError(alignment): Error {\n  return Error(generateGenericError('verticalAlign/yAlign', alignment, VALID_VERT_ALIGN));\n}\n\nexport function getInvalidScrollStrategyError(strategy): Error {\n  return Error(generateGenericError('scrollStrategy', strategy, VALID_SCROLL));\n}\n\nfunction generateGenericError(apiName: string, invalid: any, valid: string[]): string {\n  return `Invalid ${apiName}: '${invalid}'. Valid options are ` +\n    `${valid.map(v => `'${v}'`).join(', ')}.`;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  ViewChild,\n  ViewEncapsulation,\n  TemplateRef,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { DOCUMENT } from '@angular/common';\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { transformPopover } from './popover.animations';\nimport {\n  NotificationAction,\n  PopoverNotification,\n  PopoverNotificationService,\n} from './notification.service';\nimport {\n  getUnanchoredPopoverError,\n  getInvalidHorizontalAlignError,\n  getInvalidVerticalAlignError,\n  getInvalidScrollStrategyError,\n} from './popover.errors';\nimport {\n  SatPopoverScrollStrategy,\n  SatPopoverHorizontalAlign,\n  SatPopoverVerticalAlign,\n  VALID_SCROLL,\n  VALID_HORIZ_ALIGN,\n  VALID_VERT_ALIGN,\n  SatPopoverOpenOptions,\n} from './types';\n\n// See http://cubic-bezier.com/#.25,.8,.25,1 for reference.\nconst DEFAULT_TRANSITION  = '200ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n@Component({\n  selector: 'sat-popover',\n  encapsulation: ViewEncapsulation.None,\n  animations: [transformPopover],\n  styleUrls: ['./popover.component.scss'],\n  templateUrl: './popover.component.html',\n})\nexport class SatPopover implements OnInit, OnDestroy {\n\n  /** Alignment of the popover on the horizontal axis. */\n  @Input()\n  get horizontalAlign() { return this._horizontalAlign; }\n  set horizontalAlign(val: SatPopoverHorizontalAlign) {\n    this._validateHorizontalAlign(val);\n    if (this._horizontalAlign !== val) {\n      this._horizontalAlign = val;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _horizontalAlign: SatPopoverHorizontalAlign = 'center';\n\n  /** Alignment of the popover on the x axis. Alias for `horizontalAlign`. */\n  @Input()\n  get xAlign() { return this.horizontalAlign; }\n  set xAlign(val: SatPopoverHorizontalAlign) { this.horizontalAlign = val; }\n\n  /** Alignment of the popover on the vertical axis. */\n  @Input()\n  get verticalAlign() { return this._verticalAlign; }\n  set verticalAlign(val: SatPopoverVerticalAlign) {\n    this._validateVerticalAlign(val);\n    if (this._verticalAlign !== val) {\n      this._verticalAlign = val;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _verticalAlign: SatPopoverVerticalAlign = 'center';\n\n  /** Alignment of the popover on the y axis. Alias for `verticalAlign`. */\n  @Input()\n  get yAlign() { return this.verticalAlign; }\n  set yAlign(val: SatPopoverVerticalAlign) { this.verticalAlign = val; }\n\n  /** Whether the popover always opens with the specified alignment. */\n  @Input()\n  get forceAlignment() { return this._forceAlignment; }\n  set forceAlignment(val: boolean) {\n    const coercedVal = coerceBooleanProperty(val);\n    if (this._forceAlignment !== coercedVal) {\n      this._forceAlignment = coercedVal;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _forceAlignment = false;\n\n  /**\n   * Whether the popover's alignment is locked after opening. This prevents the popover\n   * from changing its alignement when scrolling or changing the size of the viewport.\n   */\n  @Input()\n  get lockAlignment() { return this._lockAlignment; }\n  set lockAlignment(val: boolean) {\n    const coercedVal = coerceBooleanProperty(val);\n    if (this._lockAlignment !== coercedVal) {\n      this._lockAlignment = coerceBooleanProperty(val);\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.REPOSITION));\n    }\n  }\n  private _lockAlignment = false;\n\n  /** Whether the first focusable element should be focused on open. */\n  @Input()\n  get autoFocus() { return this._autoFocus && this._autoFocusOverride; }\n  set autoFocus(val: boolean) {\n    this._autoFocus = coerceBooleanProperty(val);\n  }\n  private _autoFocus = true;\n  _autoFocusOverride = true;\n\n /** Whether the popover should return focus to the previously focused element after closing. */\n @Input()\n  get restoreFocus() { return this._restoreFocus && this._restoreFocusOverride; }\n  set restoreFocus(val: boolean) {\n    this._restoreFocus = coerceBooleanProperty(val);\n  }\n  private _restoreFocus = true;\n  _restoreFocusOverride = true;\n\n  /** How the popover should handle scrolling. */\n  @Input()\n  get scrollStrategy() { return this._scrollStrategy; }\n  set scrollStrategy(val: SatPopoverScrollStrategy) {\n    this._validateScrollStrategy(val);\n    if (this._scrollStrategy !== val) {\n      this._scrollStrategy = val;\n      this._dispatchConfigNotification(new PopoverNotification(NotificationAction.UPDATE_CONFIG));\n    }\n  }\n  private _scrollStrategy: SatPopoverScrollStrategy = 'reposition';\n\n  /** Whether the popover should have a backdrop (includes closing on click). */\n  @Input()\n  get hasBackdrop() { return this._hasBackdrop; }\n  set hasBackdrop(val: boolean) {\n    this._hasBackdrop = coerceBooleanProperty(val);\n  }\n  private _hasBackdrop = false;\n\n  /** Whether the popover should close when the user clicks the backdrop or presses ESC. */\n  @Input()\n  get interactiveClose() { return this._interactiveClose; }\n  set interactiveClose(val: boolean) {\n    this._interactiveClose = coerceBooleanProperty(val);\n  }\n  private _interactiveClose = true;\n\n  /** Custom transition to use while opening. */\n  @Input()\n  get openTransition() { return this._openTransition; }\n  set openTransition(val: string) {\n    if (val) {\n      this._openTransition = val;\n    }\n  }\n  private _openTransition = DEFAULT_TRANSITION;\n\n  /** Custom transition to use while closing. */\n  @Input()\n  get closeTransition() { return this._closeTransition; }\n  set closeTransition(val: string) {\n    if (val) {\n      this._closeTransition = val;\n    }\n  }\n  private _closeTransition = DEFAULT_TRANSITION;\n\n  /** Optional backdrop class. */\n  @Input() backdropClass = '';\n\n  /** Emits when the popover is opened. */\n  @Output() opened = new EventEmitter<void>();\n\n  /** Emits when the popover is closed. */\n  @Output() closed = new EventEmitter<any>();\n\n  /** Emits when the popover has finished opening. */\n  @Output() afterOpen = new EventEmitter<void>();\n\n  /** Emits when the popover has finished closing. */\n  @Output() afterClose = new EventEmitter<void>();\n\n  /** Emits when the backdrop is clicked. */\n  @Output() backdropClicked = new EventEmitter<void>();\n\n  /** Emits when a keydown event is targeted to this popover's overlay. */\n  @Output() overlayKeydown = new EventEmitter<KeyboardEvent>();\n\n  /** Reference to template so it can be placed within a portal. */\n  @ViewChild(TemplateRef) _templateRef: TemplateRef<any>;\n\n  /** Classes to be added to the popover for setting the correct transform origin. */\n  _classList: any = {};\n\n  /** Whether the popover is presently open. */\n  _open = false;\n\n  /** Instance of notification service. Will be undefined until attached to an anchor. */\n  _notifications: PopoverNotificationService;\n\n  /** Reference to the element to build a focus trap around. */\n  @ViewChild('focusTrapElement')\n  private _focusTrapElement: ElementRef;\n\n  /** Reference to the element that was focused before opening. */\n  private _previouslyFocusedElement: HTMLElement;\n\n  /** Reference to a focus trap around the popover. */\n  private _focusTrap: FocusTrap;\n\n  constructor(\n    private _focusTrapFactory: FocusTrapFactory,\n    @Optional() @Inject(DOCUMENT) private _document: any\n  ) { }\n\n  ngOnInit() {\n    this._setAlignmentClasses();\n  }\n\n  ngOnDestroy() {\n    if (this._notifications) {\n      this._notifications.dispose();\n    }\n  }\n\n  /** Open this popover. */\n  open(options: SatPopoverOpenOptions = {}): void {\n    const notification = new PopoverNotification(NotificationAction.OPEN, options);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Close this popover. */\n  close(value?: any): void {\n    const notification = new PopoverNotification(NotificationAction.CLOSE, value);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Toggle this popover open or closed. */\n  toggle(): void {\n    const notification = new PopoverNotification(NotificationAction.TOGGLE);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Realign the popover to the anchor. */\n  realign(): void {\n    const notification = new PopoverNotification(NotificationAction.REALIGN);\n    this._dispatchActionNotification(notification);\n  }\n\n  /** Gets whether the popover is presently open. */\n  isOpen(): boolean {\n    return this._open;\n  }\n\n  /** Gets an animation config with customized (or default) transition values. */\n  _getAnimation(): { value: any, params: any } {\n    return {\n      value: 'visible',\n      params: { openTransition: this.openTransition, closeTransition: this.closeTransition }\n    };\n  }\n\n  /** Callback for when the popover is finished animating in or out. */\n  _onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'visible') {\n      this._trapFocus();\n      this.afterOpen.emit();\n    } else if (event.toState === 'void') {\n      this._restoreFocusAndDestroyTrap();\n      this.afterClose.emit();\n    }\n  }\n\n  /** Apply alignment classes based on alignment inputs. */\n  _setAlignmentClasses(horizAlign = this.horizontalAlign, vertAlign = this.verticalAlign) {\n    this._classList['sat-popover-before'] = horizAlign === 'before' || horizAlign === 'end';\n    this._classList['sat-popover-after']  = horizAlign === 'after' || horizAlign === 'start';\n\n    this._classList['sat-popover-above'] = vertAlign === 'above' || vertAlign === 'end';\n    this._classList['sat-popover-below'] = vertAlign === 'below' || vertAlign === 'start';\n\n    this._classList['sat-popover-center'] = horizAlign === 'center' || vertAlign === 'center';\n  }\n\n  /** Move the focus inside the focus trap and remember where to return later. */\n  private _trapFocus(): void {\n    this._savePreviouslyFocusedElement();\n\n    // There won't be a focus trap element if the close animation starts before open finishes\n    if (!this._focusTrapElement) {\n      return;\n    }\n\n    if (!this._focusTrap && this._focusTrapElement) {\n      this._focusTrap = this._focusTrapFactory.create(this._focusTrapElement.nativeElement);\n    }\n\n    if (this.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  /** Restore focus to the element focused before the popover opened. Also destroy trap. */\n  private _restoreFocusAndDestroyTrap(): void {\n    const toFocus = this._previouslyFocusedElement;\n\n    // Must check active element is focusable for IE sake\n    if (toFocus && 'focus' in toFocus && this.restoreFocus) {\n      this._previouslyFocusedElement.focus();\n    }\n\n    this._previouslyFocusedElement = null;\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n      this._focusTrap = undefined;\n    }\n  }\n\n  /** Save a reference to the element focused before the popover was opened. */\n  private _savePreviouslyFocusedElement(): void {\n    if (this._document) {\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n    }\n  }\n\n  /** Dispatch a notification to the notification service, if possible. */\n  private _dispatchConfigNotification(notification: PopoverNotification) {\n    if (this._notifications) {\n      this._notifications.dispatch(notification);\n    }\n  }\n\n  /** Dispatch a notification to the notification service and throw if unable to. */\n  private _dispatchActionNotification(notification: PopoverNotification) {\n    if (!this._notifications) {\n      throw getUnanchoredPopoverError();\n    }\n\n    this._notifications.dispatch(notification);\n  }\n\n  /** Throws an error if the alignment is not a valid horizontalAlign. */\n  private _validateHorizontalAlign(pos: SatPopoverHorizontalAlign): void {\n    if (VALID_HORIZ_ALIGN.indexOf(pos) === -1) {\n      throw getInvalidHorizontalAlignError(pos);\n    }\n  }\n\n  /** Throws an error if the alignment is not a valid verticalAlign. */\n  private _validateVerticalAlign(pos: SatPopoverVerticalAlign): void {\n    if (VALID_VERT_ALIGN.indexOf(pos) === -1) {\n      throw getInvalidVerticalAlignError(pos);\n    }\n  }\n\n  /** Throws an error if the scroll strategy is not a valid strategy. */\n  private _validateScrollStrategy(strategy: SatPopoverScrollStrategy): void {\n    if (VALID_SCROLL.indexOf(strategy) === -1) {\n      throw getInvalidScrollStrategyError(strategy);\n    }\n  }\n}\n","import {\n  ElementRef,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { Directionality, Direction} from '@angular/cdk/bidi';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subscription, Subject } from 'rxjs';\nimport { takeUntil, take, filter, tap } from 'rxjs/operators';\n\nimport { SatPopover } from './popover.component';\nimport {\n  SatPopoverHorizontalAlign,\n  SatPopoverVerticalAlign,\n  SatPopoverScrollStrategy,\n  SatPopoverOpenOptions,\n} from './types';\n\nimport { PopoverNotificationService, NotificationAction } from './notification.service';\n\n/**\n * Configuration provided by the popover for the anchoring service\n * to build the correct overlay config.\n */\ninterface PopoverConfig {\n  horizontalAlign: SatPopoverHorizontalAlign;\n  verticalAlign: SatPopoverVerticalAlign;\n  hasBackdrop: boolean;\n  backdropClass: string;\n  scrollStrategy: SatPopoverScrollStrategy;\n  forceAlignment: boolean;\n  lockAlignment: boolean;\n}\n\n@Injectable()\nexport class SatPopoverAnchoringService implements OnDestroy {\n\n  /** Emits when the popover is opened. */\n  popoverOpened = new Subject<void>();\n\n  /** Emits when the popover is closed. */\n  popoverClosed = new Subject<void>();\n\n  /** Reference to the overlay containing the popover component. */\n  _overlayRef: OverlayRef;\n\n  /** Reference to the target popover. */\n  private _popover: SatPopover;\n\n  /** Reference to the view container for the popover template. */\n  private _viewContainerRef: ViewContainerRef;\n\n  /** Reference to the anchor element. */\n  private _anchor: ElementRef;\n\n  /** Reference to a template portal where the overlay will be attached. */\n  private _portal: TemplatePortal<any>;\n\n  /** Communications channel with the popover. */\n  private _notifications: PopoverNotificationService;\n\n  /** Single subscription to notifications service events. */\n  private _notificationsSubscription: Subscription;\n\n  /** Single subscription to position changes. */\n  private _positionChangeSubscription: Subscription;\n\n  /** Whether the popover is presently open. */\n  private _popoverOpen = false;\n\n  /** Emits when the service is destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _ngZone: NgZone,\n    @Optional() private _dir: Directionality\n  ) { }\n\n  ngOnDestroy() {\n    // Destroy popover before terminating subscriptions so that any resulting\n    // detachments update 'closed state'\n    this._destroyPopover();\n\n    // Terminate subscriptions\n    if (this._notificationsSubscription) {\n      this._notificationsSubscription.unsubscribe();\n    }\n    if (this._positionChangeSubscription) {\n      this._positionChangeSubscription.unsubscribe();\n    }\n    this._onDestroy.next();\n    this._onDestroy.complete();\n\n    this.popoverOpened.complete();\n    this.popoverClosed.complete();\n  }\n\n  /** Anchor a popover instance to a view and connection element. */\n  anchor(popover: SatPopover, viewContainerRef: ViewContainerRef, anchor: ElementRef): void {\n    // Destroy any previous popovers\n    this._destroyPopover();\n\n    // Assign local refs\n    this._popover = popover;\n    this._viewContainerRef = viewContainerRef;\n    this._anchor = anchor;\n\n    // Provide notification service as a communication channel between popover and anchor.\n    // Then subscribe to notifications to take appropriate actions.\n    this._popover._notifications = this._notifications = new PopoverNotificationService();\n    this._subscribeToNotifications();\n  }\n\n  /** Gets whether the popover is presently open. */\n  isPopoverOpen(): boolean {\n    return this._popoverOpen;\n  }\n\n  /** Toggles the popover between the open and closed states. */\n  togglePopover(): void {\n    return this._popoverOpen ? this.closePopover() : this.openPopover();\n  }\n\n  /** Opens the popover. */\n  openPopover(options: SatPopoverOpenOptions = {}): void {\n    if (!this._popoverOpen) {\n      this._applyOpenOptions(options);\n      this._createOverlay();\n      this._subscribeToBackdrop();\n      this._subscribeToEscape();\n      this._subscribeToDetachments();\n      this._saveOpenedState();\n    }\n  }\n\n  /** Closes the popover. */\n  closePopover(value?: any): void {\n    if (this._overlayRef) {\n      this._saveClosedState(value);\n      this._overlayRef.detach();\n    }\n  }\n\n  /** Realign the popover to the anchor. */\n  realignPopoverToAnchor(): void {\n    if (this._overlayRef) {\n      const config = this._overlayRef.getConfig();\n      const strategy = config.positionStrategy as FlexibleConnectedPositionStrategy;\n      strategy.reapplyLastPosition();\n    }\n  }\n\n  /** Get a reference to the anchor element. */\n  getAnchorElement(): ElementRef {\n    return this._anchor;\n  }\n\n  /** Apply behavior properties on the popover based on the open options. */\n  private _applyOpenOptions(options: SatPopoverOpenOptions): void {\n    // Only override restoreFocus as `false` if the option is explicitly `false`\n    const restoreFocus = options.restoreFocus !== false;\n    this._popover._restoreFocusOverride = restoreFocus;\n\n    // Only override autoFocus as `false` if the option is explicitly `false`\n    const autoFocus = options.autoFocus !== false;\n    this._popover._autoFocusOverride = autoFocus;\n  }\n\n  /** Create an overlay to be attached to the portal. */\n  private _createOverlay(): OverlayRef {\n    // Create overlay if it doesn't yet exist\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this._popover._templateRef, this._viewContainerRef);\n\n      const popoverConfig = {\n        horizontalAlign: this._popover.horizontalAlign,\n        verticalAlign: this._popover.verticalAlign,\n        hasBackdrop: this._popover.hasBackdrop,\n        backdropClass: this._popover.backdropClass,\n        scrollStrategy: this._popover.scrollStrategy,\n        forceAlignment: this._popover.forceAlignment,\n        lockAlignment: this._popover.lockAlignment,\n      };\n\n      const overlayConfig = this._getOverlayConfig(popoverConfig, this._anchor);\n\n      this._subscribeToPositionChanges(\n        overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy\n      );\n\n      this._overlayRef = this._overlay.create(overlayConfig);\n    }\n\n    // Actually open the popover\n    this._overlayRef.attach(this._portal);\n    return this._overlayRef;\n  }\n\n\n  /** Removes the popover from the DOM. Does NOT update open state. */\n  private _destroyPopover(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  /**\n   * Destroys the popover immediately if it is closed, or waits until it\n   * has been closed to destroy it.\n   */\n  private _destroyPopoverOnceClosed(): void {\n    if (this.isPopoverOpen() && this._overlayRef) {\n      this._overlayRef.detachments().pipe(\n        take(1),\n        takeUntil(this._onDestroy)\n      ).subscribe(() => this._destroyPopover());\n    } else {\n      this._destroyPopover();\n    }\n  }\n\n  /**\n   * Call appropriate anchor method when an event is dispatched through\n   * the notification service.\n   */\n  private _subscribeToNotifications(): void {\n    if (this._notificationsSubscription) {\n      this._notificationsSubscription.unsubscribe();\n    }\n\n    this._notificationsSubscription = this._notifications.events()\n      .subscribe(event => {\n        switch (event.action) {\n          case NotificationAction.OPEN:\n            this.openPopover(event.value);\n            break;\n          case NotificationAction.CLOSE:\n            this.closePopover(event.value);\n            break;\n          case NotificationAction.TOGGLE:\n            this.togglePopover();\n            break;\n          case NotificationAction.REPOSITION:\n            // TODO: When the overlay's position can be dynamically changed, do not destroy\n          case NotificationAction.UPDATE_CONFIG:\n            this._destroyPopoverOnceClosed();\n            break;\n          case NotificationAction.REALIGN:\n            this.realignPopoverToAnchor();\n            break;\n        }\n      });\n  }\n\n  /** Close popover when backdrop is clicked. */\n  private _subscribeToBackdrop(): void {\n    this._overlayRef\n      .backdropClick()\n      .pipe(\n        tap(() => this._popover.backdropClicked.emit()),\n        filter(() => this._popover.interactiveClose),\n        takeUntil(this.popoverClosed),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.closePopover());\n  }\n\n  /** Close popover when escape keydown event occurs. */\n  private _subscribeToEscape(): void {\n    this._overlayRef\n      .keydownEvents()\n      .pipe(\n        tap(event => this._popover.overlayKeydown.emit(event)),\n        filter(event => event.keyCode === ESCAPE),\n        filter(() => this._popover.interactiveClose),\n        takeUntil(this.popoverClosed),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.closePopover());\n  }\n\n  /** Set state back to closed when detached. */\n  private _subscribeToDetachments(): void {\n    this._overlayRef\n      .detachments()\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => this._saveClosedState());\n  }\n\n  /** Save the opened state of the popover and emit. */\n  private _saveOpenedState(): void {\n    if (!this._popoverOpen) {\n      this._popover._open = this._popoverOpen = true;\n\n      this.popoverOpened.next();\n      this._popover.opened.emit();\n    }\n  }\n\n  /** Save the closed state of the popover and emit. */\n  private _saveClosedState(value?: any): void {\n    if (this._popoverOpen) {\n      this._popover._open = this._popoverOpen = false;\n\n      this.popoverClosed.next(value);\n      this._popover.closed.emit(value);\n    }\n  }\n\n  /** Gets the text direction of the containing app. */\n  private _getDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Create and return a config for creating the overlay. */\n  private _getOverlayConfig(config: PopoverConfig, anchor: ElementRef): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getPositionStrategy(\n        config.horizontalAlign,\n        config.verticalAlign,\n        config.forceAlignment,\n        config.lockAlignment,\n        anchor,\n      ),\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._getScrollStrategyInstance(config.scrollStrategy),\n      direction: this._getDirection(),\n    });\n  }\n\n  /**\n   * Listen to changes in the position of the overlay and set the correct alignment classes,\n   * ensuring that the animation origin is correct, even with a fallback position.\n   */\n  private _subscribeToPositionChanges(position: FlexibleConnectedPositionStrategy): void {\n    if (this._positionChangeSubscription) {\n      this._positionChangeSubscription.unsubscribe();\n    }\n\n    this._positionChangeSubscription = position.positionChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(change => {\n        // Position changes may occur outside the Angular zone\n        this._ngZone.run(() => {\n          this._popover._setAlignmentClasses(\n            getHorizontalPopoverAlignment(change.connectionPair.overlayX),\n            getVerticalPopoverAlignment(change.connectionPair.overlayY),\n          );\n        });\n      });\n  }\n\n  /** Map a scroll strategy string type to an instance of a scroll strategy. */\n  private _getScrollStrategyInstance(strategy: SatPopoverScrollStrategy): ScrollStrategy {\n    switch (strategy) {\n      case 'block':\n        return this._overlay.scrollStrategies.block();\n      case 'reposition':\n        return this._overlay.scrollStrategies.reposition();\n      case 'close':\n        return this._overlay.scrollStrategies.close();\n      case 'noop':\n      default:\n        return this._overlay.scrollStrategies.noop();\n    }\n  }\n\n  /** Create and return a position strategy based on config provided to the component instance. */\n  private _getPositionStrategy(\n    horizontalTarget: SatPopoverHorizontalAlign,\n    verticalTarget: SatPopoverVerticalAlign,\n    forceAlignment: boolean,\n    lockAlignment: boolean,\n    anchor: ElementRef,\n  ): FlexibleConnectedPositionStrategy {\n    // Attach the overlay at the preferred position\n    const targetPosition = getPosition(horizontalTarget, verticalTarget);\n    const positions = [targetPosition];\n\n    const strategy = this._overlay.position()\n      .flexibleConnectedTo(anchor)\n      .withFlexibleDimensions(false)\n      .withPush(false)\n      .withViewportMargin(0)\n      .withLockedPosition(lockAlignment);\n\n    // Unless the alignment is forced, add fallbacks based on the preferred positions\n    if (!forceAlignment) {\n      const fallbacks = this._getFallbacks(horizontalTarget, verticalTarget);\n      positions.push(...fallbacks);\n    }\n\n    return strategy.withPositions(positions);\n  }\n\n  /** Get fallback positions based around target alignments. */\n  private _getFallbacks(\n    hTarget: SatPopoverHorizontalAlign,\n    vTarget: SatPopoverVerticalAlign\n  ): ConnectionPositionPair[] {\n    // Determine if the target alignments overlap the anchor\n    const horizontalOverlapAllowed = hTarget !== 'before' && hTarget !== 'after';\n    const verticalOverlapAllowed = vTarget !== 'above' && vTarget !== 'below';\n\n    // If a target alignment doesn't cover the anchor, don't let any of the fallback alignments\n    // cover the anchor\n    const possibleHorizontalAlignments: SatPopoverHorizontalAlign[] =\n      horizontalOverlapAllowed ?\n        ['before', 'start', 'center', 'end', 'after'] :\n        ['before', 'after'];\n    const possibleVerticalAlignments: SatPopoverVerticalAlign[] =\n      verticalOverlapAllowed ?\n        ['above', 'start', 'center', 'end', 'below'] :\n        ['above', 'below'];\n\n    // Create fallbacks for each allowed prioritized fallback alignment combo\n    const fallbacks: ConnectionPositionPair[] = [];\n    prioritizeAroundTarget(hTarget, possibleHorizontalAlignments).forEach(h => {\n      prioritizeAroundTarget(vTarget, possibleVerticalAlignments).forEach(v => {\n        fallbacks.push(getPosition(h, v));\n      });\n    });\n\n    // Remove the first item since it will be the target alignment and isn't considered a fallback\n    return fallbacks.slice(1, fallbacks.length);\n  }\n\n}\n\n/** Helper function to get a cdk position pair from SatPopover alignments. */\nfunction getPosition(\n  h: SatPopoverHorizontalAlign,\n  v: SatPopoverVerticalAlign,\n): ConnectionPositionPair {\n  const {originX, overlayX} = getHorizontalConnectionPosPair(h);\n  const {originY, overlayY} = getVerticalConnectionPosPair(v);\n  return new ConnectionPositionPair({originX, originY}, {overlayX, overlayY});\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getHorizontalPopoverAlignment(h: HorizontalConnectionPos): SatPopoverHorizontalAlign {\n  if (h === 'start') {\n    return 'after';\n  }\n\n  if (h === 'end') {\n    return 'before';\n  }\n\n  return 'center';\n}\n\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getVerticalPopoverAlignment(v: VerticalConnectionPos): SatPopoverVerticalAlign {\n  if (v === 'top') {\n    return 'below';\n  }\n\n  if (v === 'bottom') {\n    return 'above';\n  }\n\n  return 'center';\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getHorizontalConnectionPosPair(h: SatPopoverHorizontalAlign):\n    {originX: HorizontalConnectionPos, overlayX: HorizontalConnectionPos} {\n  switch (h) {\n    case 'before':\n      return {originX: 'start', overlayX: 'end'};\n    case 'start':\n      return {originX: 'start', overlayX: 'start'};\n    case 'end':\n      return {originX: 'end', overlayX: 'end'};\n    case 'after':\n      return {originX: 'end', overlayX: 'start'};\n    default:\n      return {originX: 'center', overlayX: 'center'};\n  }\n}\n\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getVerticalConnectionPosPair(v: SatPopoverVerticalAlign):\n    {originY: VerticalConnectionPos, overlayY: VerticalConnectionPos} {\n  switch (v) {\n    case 'above':\n      return {originY: 'top', overlayY: 'bottom'};\n    case 'start':\n      return {originY: 'top', overlayY: 'top'};\n    case 'end':\n      return {originY: 'bottom', overlayY: 'bottom'};\n    case 'below':\n      return {originY: 'bottom', overlayY: 'top'};\n    default:\n      return {originY: 'center', overlayY: 'center'};\n  }\n}\n\n\n/**\n * Helper function that takes an ordered array options and returns a reorderded\n * array around the target item. e.g.:\n *\n * target: 3; options: [1, 2, 3, 4, 5, 6, 7];\n *\n * return: [3, 4, 2, 5, 1, 6, 7]\n */\nfunction prioritizeAroundTarget<T>(target: T, options: T[]): T[] {\n  const targetIndex = options.indexOf(target);\n\n  // Set the first item to be the target\n  const reordered = [target];\n\n  // Make left and right stacks where the highest priority item is last\n  const left = options.slice(0, targetIndex);\n  const right = options.slice(targetIndex + 1, options.length).reverse();\n\n  // Alternate between stacks until one is empty\n  while (left.length && right.length) {\n    reordered.push(right.pop());\n    reordered.push(left.pop());\n  }\n\n  // Flush out right side\n  while (right.length) {\n    reordered.push(right.pop());\n  }\n\n  // Flush out left side\n  while (left.length) {\n    reordered.push(left.pop());\n  }\n\n  return reordered;\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { tap, takeUntil } from 'rxjs/operators';\n\nimport { SatPopover } from './popover.component';\nimport { getInvalidPopoverError } from './popover.errors';\nimport { SatPopoverAnchoringService } from './popover-anchoring.service';\nimport { SatPopoverOpenOptions } from './types';\n\n@Directive({\n  selector: '[satPopoverAnchorFor]',\n  exportAs: 'satPopoverAnchor',\n  providers: [SatPopoverAnchoringService],\n})\nexport class SatPopoverAnchor implements OnInit, OnDestroy {\n\n  /** Reference to the popover instance. */\n  @Input('satPopoverAnchorFor')\n  get attachedPopover() { return this._attachedPopover; }\n  set attachedPopover(value: SatPopover) {\n    this._validateAttachedPopover(value);\n    this._attachedPopover = value;\n    // Anchor the popover to the element ref\n    this._anchoring.anchor(this.attachedPopover, this._viewContainerRef, this._elementRef);\n  }\n  private _attachedPopover: SatPopover;\n\n  /** Emits when the popover is opened. */\n  @Output() popoverOpened = new EventEmitter<void>();\n\n  /** Emits when the popover is closed. */\n  @Output() popoverClosed = new EventEmitter<any>();\n\n  /** Emits when the directive is destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewContainerRef: ViewContainerRef,\n    public _anchoring: SatPopoverAnchoringService,\n  ) { }\n\n  ngOnInit() {\n    // Re-emit open and close events\n    const opened$ = this._anchoring.popoverOpened\n      .pipe(tap(() => this.popoverOpened.emit()));\n    const closed$ = this._anchoring.popoverClosed\n      .pipe(tap(value => this.popoverClosed.emit(value)));\n    merge(opened$, closed$).pipe(takeUntil(this._onDestroy)).subscribe();\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Gets whether the popover is presently open. */\n  isPopoverOpen(): boolean {\n    return this._anchoring.isPopoverOpen();\n  }\n\n  /** Toggles the popover between the open and closed states. */\n  togglePopover(): void {\n    this._anchoring.togglePopover();\n  }\n\n  /** Opens the popover. */\n  openPopover(options: SatPopoverOpenOptions = {}): void {\n    this._anchoring.openPopover(options);\n  }\n\n  /** Closes the popover. */\n  closePopover(value?: any): void {\n    this._anchoring.closePopover(value);\n  }\n\n  /** Realign the popover to the anchor. */\n  realignPopover(): void {\n    this._anchoring.realignPopoverToAnchor();\n  }\n\n  /** Get a reference to the anchor element. */\n  getElement(): ElementRef {\n    return this._elementRef;\n  }\n\n  /** Throws an error if the popover instance is not provided. */\n  private _validateAttachedPopover(popover: SatPopover): void {\n    if (!popover || !(popover instanceof SatPopover)) {\n      throw getInvalidPopoverError();\n    }\n  }\n\n}\n","import { AfterViewInit, Directive, HostListener, Input, OnDestroy } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { of, Subject } from 'rxjs';\nimport { delay, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SatPopoverAnchor } from './popover-anchor.directive';\n\n@Directive({\n  selector: '[satPopoverHover]'\n})\nexport class SatPopoverHoverDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Amount of time to delay (ms) after hovering starts before\n   * the popover opens. Defaults to 0ms.\n   */\n  @Input()\n  get satPopoverHover() { return this._satPopoverHover; }\n  set satPopoverHover(val: number) {\n    this._satPopoverHover = coerceNumberProperty(val);\n  }\n  private _satPopoverHover = 0;\n\n  /** Emits when the directive is destroyed. */\n  private _onDestroy = new Subject();\n\n  /** Emits when the user's mouse enters the element. */\n  private _onMouseEnter = new Subject<void>();\n\n  /** Emits when the user's mouse leaves the element. */\n  private _onMouseLeave = new Subject<void>();\n\n  constructor(public anchor: SatPopoverAnchor) { }\n\n  ngAfterViewInit() {\n    // Whenever the user hovers this host element, delay the configured\n    // amount of time and open the popover. Terminate if the mouse leaves\n    // the host element before the delay is complete.\n    this._onMouseEnter\n      .pipe(\n        switchMap(() => {\n          return of(null).pipe(\n            delay(this._satPopoverHover || 0),\n            takeUntil(this._onMouseLeave),\n          );\n        }),\n        takeUntil(this._onDestroy),\n      )\n      .subscribe(() => this.anchor.openPopover());\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  @HostListener('mouseenter')\n  showPopover() {\n    this._onMouseEnter.next();\n  }\n\n  @HostListener('mouseleave')\n  closePopover() {\n    this._onMouseLeave.next();\n    this.anchor.closePopover();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\n\nimport { SatPopover } from './popover.component';\nimport { SatPopoverAnchor } from './popover-anchor.directive';\nimport { SatPopoverHoverDirective } from './popover-hover.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    A11yModule,\n    BidiModule,\n  ],\n  declarations: [\n    SatPopover,\n    SatPopoverAnchor,\n    SatPopoverHoverDirective,\n  ],\n  exports: [\n    SatPopover,\n    SatPopoverAnchor,\n    SatPopoverHoverDirective,\n    BidiModule,\n  ]\n})\nexport class SatPopoverModule { }\n"],"names":[],"mappings":"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"}
