{"version":3,"file":"ngx-bootstrap-popover.js","sources":["ng:/ngx-bootstrap/popover/popover.config.ts","ng:/ngx-bootstrap/popover/popover-container.component.ts","ng:/ngx-bootstrap/popover/popover.directive.ts","ng:/ngx-bootstrap/popover/popover.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n@Injectable()\nexport class PopoverConfig {\n  /** sets disable adaptive position */\n  adaptivePosition = true;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n   */\n  placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  triggers = 'click';\n\n  outsideClick = false;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  container: string;\n}\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    '[class.bs3]': 'isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs3.popover-top {\n      margin-bottom: 10px;\n    }\n    :host.bs3.popover.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.popover.top {\n      margin-bottom: 10px;\n    }\n    :host.popover.bottom>.arrow {\n      margin-left: -4px;\n    }\n    :host.bs3.bs-popover-left {\n      margin-right: .5rem;\n    }\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\n      margin: .3rem 0;\n    }\n    `\n  ],\n  templateUrl: './popover-container.component.html'\n})\nexport class PopoverContainerComponent {\n  @Input() placement: string;\n  @Input() title: string;\n  containerClass: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PopoverContainerComponent } from './popover-container.component';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /** sets disable adaptive position */\n  @Input() adaptivePosition: boolean;\n  /**\n   * Content to be displayed as popover.\n   */\n  /* tslint:disable-next-line: no-any */\n  @Input() popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n  /* tslint:disable-next-line: no-any */\n  @Input() popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n  @Input() popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto';\n  /**\n   * Close popover on outside click\n   */\n  @Input() outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  @Input() container: string;\n\n  /**\n   * Css class for popover container\n   */\n  @Input() containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  /* tslint:disable-next-line: no-any */\n  @Output() onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n  /* tslint:disable-next-line: no-any */\n  @Output() onHidden: EventEmitter<any>;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n\n  constructor(\n    _config: PopoverConfig,\n    _elementRef: ElementRef,\n    _renderer: Renderer2,\n    _viewContainerRef: ViewContainerRef,\n    cis: ComponentLoaderFactory,\n    private _positionService: PositioningService\n  ) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n\n    Object.assign(this, _config);\n\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover) {\n      return;\n    }\n\n    this._positionService.setOptions({\n      modifiers: {\n        flip: {\n          enabled: this.adaptivePosition\n        },\n        preventOverflow: {\n          enabled: this.adaptivePosition\n        }\n      }\n    });\n\n    this._popover\n      .attach(PopoverContainerComponent)\n      .to(this.container)\n      .position({attachment: this.placement})\n      .show({\n        content: this.popover,\n        context: this.popoverContext,\n        placement: this.placement,\n        title: this.popoverTitle,\n        containerClass: this.containerClass\n      });\n\n    if (!this.adaptivePosition) {\n      this._positionService.calcPosition();\n      this._positionService.deletePositionElement(this._popover._componentRef.location);\n    }\n\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._popover.hide();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show()\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._popover.dispose();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { PopoverConfig } from './popover.config';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n})\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PopoverModule,\n      providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"]}