{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-intl-tel-input/lib/enums/country-iso.enum.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.service.ts","ng://ngx-intl-tel-input/lib/enums/search-country-field.enum.ts","ng://ngx-intl-tel-input/lib/enums/tooltip-label.enum.ts","ng://ngx-intl-tel-input/lib/data/country-code.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.validator.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.component.ts","ng://ngx-intl-tel-input/lib/directives/native-element-injector.directive.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","CountryISO","NgxIntlTelInputService","Injectable","providedIn","SearchCountryField","TooltipLabel","CountryCode","this","allCountries","Afghanistan","Albania","Algeria","Andorra","Angola","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahrain","Bangladesh","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","BosniaAndHerzegovina","Botswana","Brazil","BritishIndianOceanTerritory","Brunei","Bulgaria","BurkinaFaso","Burundi","Cambodia","Cameroon","Canada","CapeVerde","CaribbeanNetherlands","CentralAfricanRepublic","Chad","Chile","China","ChristmasIsland","Cocos","Colombia","Comoros","CongoDRCJamhuriYaKidemokrasiaYaKongo","CongoRepublicCongoBrazzaville","CookIslands","CostaRica","CôteDIvoire","Croatia","Cuba","Curaçao","Cyprus","CzechRepublic","Denmark","Djibouti","Dominica","DominicanRepublic","Ecuador","Egypt","ElSalvador","EquatorialGuinea","Eritrea","Estonia","Ethiopia","FalklandIslands","FaroeIslands","Fiji","Finland","France","FrenchGuiana","FrenchPolynesia","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Honduras","HongKong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","IsleOfMan","Israel","Italy","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","MarshallIslands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","NewCaledonia","NewZealand","Nicaragua","Niger","Nigeria","Niue","NorfolkIsland","NorthKorea","NorthernMarianaIslands","Norway","Oman","Pakistan","Palau","Palestine","Panama","PapuaNewGuinea","Paraguay","Peru","Philippines","Poland","Portugal","PuertoRico","Qatar","Réunion","Romania","Russia","Rwanda","SaintBarthélemy","SaintHelena","SaintKittsAndNevis","SaintMartin","SaintPierreAndMiquelon","Samoa","SanMarino","SãoToméAndPríncipe","SaudiArabia","Senegal","Serbia","Seychelles","SierraLeone","Singapore","Slovakia","Slovenia","SolomonIslands","Somalia","SouthAfrica","SouthKorea","SouthSudan","Spain","SriLanka","Sudan","Suriname","SvalbardAndJanMayen","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","TimorLeste","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","TurksAndCaicosIslands","Tuvalu","Uganda","Ukraine","UnitedArabEmirates","UnitedKingdom","UnitedStates","Uruguay","Uzbekistan","Vanuatu","VaticanCity","Venezuela","Vietnam","WallisAndFutuna","WesternSahara","Yemen","Zambia","Zimbabwe","ÅlandIslands","phoneNumberValidator","control","value","el","nativeElement","inputBox","querySelector","undefined","id","isCheckValidation","getAttribute","isRequired","errors","required","error","validatePhoneNumber","valid","setCustomValidity","number","lpn.PhoneNumberUtil","getInstance","parse","countryCode","e","isValidNumberForRegion","clearValidators","NgxIntlTelInputComponent","countryCodeData","preferredCountries","enablePlaceholder","cssClass","onlyCountries","enableAutoCountrySelect","searchCountryFlag","searchCountryField","All","searchCountryPlaceholder","maxLength","selectFirstCountry","phoneValidation","inputId","separateDialCode","countryChange","EventEmitter","selectedCountry","areaCodes","dialCode","htmlId","flagClass","iso2","name","placeHolder","priority","phoneNumber","preferredCountriesInDropDown","phoneUtil","disabled","countrySearchText","onTouched","propagateChange","_","prototype","ngOnInit","init","ngOnChanges","changes","selectedISO","currentValue","previousValue","getSelectedCountry","getPreferredCountries","checkSeparateDialCodeStyle","_this","fetchCountryData","filter","includes","setSelectedCountry","forEach","preferredCountry","push","selectedCountryISO","find","toLowerCase","onPhoneNumberChange","country","emit","searchCountry","countrySearchTextLower","indexOf","startsWith","Iso2","Name","DialCode","countryList","scrollIntoView","behavior","block","inline","numberObj","toUpperCase","getCountryCode","getCountryIsoCode","newCountry","sort","a","b","intlNo","format","lpn.PhoneNumberFormat","INTERNATIONAL","removeDialCode","internationalNumber","nationalNumber","NATIONAL","e164Number","E164","onCountrySelect","focus","onInputKeyPress","event","test","ctrlKey","preventDefault","toString","toLocaleLowerCase","getPhoneNumberPlaceHolder","getExampleNumber","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","writeValue","obj","setTimeout","rawNumber","countries","mainCountry","secondaryCountries","matchedCountry","areaCode","separateDialCodePlaceHolder","placeholder","substr","cntryCd","separateDialCodeClass","Input","Array","Output","ViewChild","ElementRef","NgxIntlTelInputComponent_1","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","useValue","ɵ0","NativeElementInjectorDirective","controlDir","host","NgControl","Directive","NgxIntlTelInputModule","forRoot","ngModule","NgxIntlTelInputModule_1","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","BsDropdownModule","TooltipModule","exports"],"mappings":"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AAA,WAAWa,OACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAb,EAAAA,WAAWc,UACX,MAED,CACC,qBACAd,EAAAA,WAAWe,QACX,OAED,CACC,QACAf,EAAAA,WAAWgB,MACX,OAED,CACC,YACAhB,EAAAA,WAAWiB,UACX,KACA,GAED,CACC,uBACAjB,EAAAA,WAAWkB,QACX,MAED,CACC,0BACAlB,EAAAA,WAAWmB,WACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAnB,EAAAA,WAAWoB,QACX,OAED,CACC,wBACApB,EAAAA,WAAWqB,WACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,qBACArB,EAAAA,WAAWsB,QACX,OAED,CACC,mBACAtB,EAAAA,WAAWuB,QACX,MAED,CACC,SACAvB,EAAAA,WAAWwB,OACX,OAED,CACC,gBACAxB,EAAAA,WAAWyB,MACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,iBACAzB,EAAAA,WAAW0B,OACX,OAED,CACC,UACA1B,EAAAA,WAAW2B,QACX,OAED,CACC,+CACA3B,EAAAA,WAAW4B,qBACX,OAED,CACC,WACA5B,EAAAA,WAAW6B,SACX,OAED,CACC,kBACA7B,EAAAA,WAAW8B,OACX,MAED,CACC,iCACA9B,EAAAA,WAAW+B,4BACX,OAED,CACC,yBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACA/B,EAAAA,WAAWgC,OACX,OAED,CACC,sBACAhC,EAAAA,WAAWiC,SACX,OAED,CACC,eACAjC,EAAAA,WAAWkC,YACX,OAED,CACC,qBACAlC,EAAAA,WAAWmC,QACX,OAED,CACC,qBACAnC,EAAAA,WAAWoC,SACX,OAED,CACC,sBACApC,EAAAA,WAAWqC,SACX,OAED,CACC,SACArC,EAAAA,WAAWsC,OACX,IACA,EACA,CACC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,QAGrC,CACC,0BACAtC,EAAAA,WAAWuC,UACX,OAED,CACC,wBACAvC,EAAAA,WAAWwC,qBACX,MACA,GAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,uDACAxC,EAAAA,WAAWyC,uBACX,OAED,CACC,eACAzC,EAAAA,WAAW0C,KACX,OAED,CACC,QACA1C,EAAAA,WAAW2C,MACX,MAED,CACC,aACA3C,EAAAA,WAAW4C,MACX,MAED,CACC,mBACA5C,EAAAA,WAAW6C,gBACX,KACA,GAED,CACC,0BACA7C,EAAAA,WAAW8C,MACX,KACA,GAED,CACC,WACA9C,EAAAA,WAAW+C,SACX,MAED,CACC,yBACA/C,EAAAA,WAAWgD,QACX,OAED,CACC,iDACAhD,EAAAA,WAAWiD,qCACX,OAED,CACC,uCACAjD,EAAAA,WAAWkD,8BACX,OAED,CACC,eACAlD,EAAAA,WAAWmD,YACX,OAED,CACC,aACAnD,EAAAA,WAAWoD,UACX,OAED,CACC,gBACApD,EAAAA,WAAWqD,YACX,OAED,CACC,qBACArD,EAAAA,WAAWsD,QACX,OAED,CACC,OACAtD,EAAAA,WAAWuD,KACX,MAED,CACC,UACAvD,EAAAA,WAAWwD,QACX,MACA,GAED,CACC,kBACAxD,EAAAA,WAAWyD,OACX,OAED,CACC,mCACAzD,EAAAA,WAAW0D,cACX,OAED,CACC,oBACA1D,EAAAA,WAAW2D,QACX,MAED,CACC,WACA3D,EAAAA,WAAW4D,SACX,OAED,CACC,WACA5D,EAAAA,WAAW6D,SACX,QAED,CACC,4CACA7D,EAAAA,WAAW8D,kBACX,IACA,EACA,CAAC,MAAO,MAAO,QAEhB,CACC,UACA9D,EAAAA,WAAW+D,QACX,OAED,CACC,iBACA/D,EAAAA,WAAWgE,MACX,MAED,CACC,cACAhE,EAAAA,WAAWiE,WACX,OAED,CACC,wCACAjE,EAAAA,WAAWkE,iBACX,OAED,CACC,UACAlE,EAAAA,WAAWmE,QACX,OAED,CACC,kBACAnE,EAAAA,WAAWoE,QACX,OAED,CACC,WACApE,EAAAA,WAAWqE,SACX,OAED,CACC,oCACArE,EAAAA,WAAWsE,gBACX,OAED,CACC,0BACAtE,EAAAA,WAAWuE,aACX,OAED,CACC,OACAvE,EAAAA,WAAWwE,KACX,OAED,CACC,kBACAxE,EAAAA,WAAWyE,QACX,MACA,GAED,CACC,SACAzE,EAAAA,WAAW0E,OACX,MAED,CACC,mCACA1E,EAAAA,WAAW2E,aACX,OAED,CACC,yCACA3E,EAAAA,WAAW4E,gBACX,OAED,CACC,QACA5E,EAAAA,WAAW6E,MACX,OAED,CACC,SACA7E,EAAAA,WAAW8E,OACX,OAED,CACC,uBACA9E,EAAAA,WAAW+E,QACX,OAED,CACC,wBACA/E,EAAAA,WAAWgF,QACX,MAED,CACC,gBACAhF,EAAAA,WAAWiF,MACX,OAED,CACC,YACAjF,EAAAA,WAAWkF,UACX,OAED,CACC,kBACAlF,EAAAA,WAAWmF,OACX,MAED,CACC,+BACAnF,EAAAA,WAAWoF,UACX,OAED,CACC,UACApF,EAAAA,WAAWqF,QACX,QAED,CACC,aACArF,EAAAA,WAAWsF,WACX,MACA,GAED,CACC,OACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAtF,EAAAA,WAAWuF,UACX,OAED,CACC,WACAvF,EAAAA,WAAWwF,SACX,KACA,EACA,CAAC,OAEF,CACC,kBACAxF,EAAAA,WAAWyF,OACX,OAED,CACC,+BACAzF,EAAAA,WAAW0F,aACX,OAED,CACC,SACA1F,EAAAA,WAAW2F,OACX,OAED,CACC,QACA3F,EAAAA,WAAW4F,MACX,OAED,CACC,WACA5F,EAAAA,WAAW6F,SACX,OAED,CACC,iBACA7F,EAAAA,WAAW8F,SACX,OAED,CACC,yBACA9F,EAAAA,WAAW+F,QACX,MAED,CACC,mBACA/F,EAAAA,WAAWgG,QACX,OAED,CACC,eACAhG,EAAAA,WAAWiG,MACX,MAED,CACC,YACAjG,EAAAA,WAAWkG,UACX,MAED,CACC,kBACAlG,EAAAA,WAAWmG,KACX,MAED,CACC,mBACAnG,EAAAA,WAAWoG,KACX,OAED,CACC,UACApG,EAAAA,WAAWqG,QACX,OAED,CACC,cACArG,EAAAA,WAAWsG,UACX,KACA,EACA,CAAC,OAEF,CACC,oBACAtG,EAAAA,WAAWuG,OACX,OAED,CACC,iBACAvG,EAAAA,WAAWwG,MACX,KACA,GAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,aACAxG,EAAAA,WAAWyG,MACX,MAED,CACC,SACAzG,EAAAA,WAAW0G,OACX,KACA,EACA,CAAC,OAEF,CACC,qBACA1G,EAAAA,WAAW2G,OACX,OAED,CACC,yBACA3G,EAAAA,WAAW4G,WACX,IACA,GAED,CACC,QACA5G,EAAAA,WAAW6G,MACX,OAED,CACC,WACA7G,EAAAA,WAAW8G,SACX,OAED,CACC,SACA9G,EAAAA,WAAW+G,OACX,OAED,CACC,qBACA/G,EAAAA,WAAWgH,OACX,OAED,CACC,0BACAhH,EAAAA,WAAWiH,WACX,OAED,CACC,aACAjH,EAAAA,WAAWkH,KACX,OAED,CACC,mBACAlH,EAAAA,WAAWmH,OACX,OAED,CACC,qBACAnH,EAAAA,WAAWoH,QACX,OAED,CACC,UACApH,EAAAA,WAAWqH,QACX,OAED,CACC,UACArH,EAAAA,WAAWsH,QACX,OAED,CACC,mBACAtH,EAAAA,WAAWuH,MACX,OAED,CACC,gBACAvH,EAAAA,WAAWwH,cACX,OAED,CACC,sBACAxH,EAAAA,WAAWyH,UACX,OAED,CACC,aACAzH,EAAAA,WAAW0H,WACX,OAED,CACC,aACA1H,EAAAA,WAAW2H,MACX,OAED,CACC,iCACA3H,EAAAA,WAAW4H,UACX,OAED,CACC,4BACA5H,EAAAA,WAAW6H,WACX,OAED,CACC,SACA7H,EAAAA,WAAW8H,OACX,OAED,CACC,WACA9H,EAAAA,WAAW+H,SACX,MAED,CACC,WACA/H,EAAAA,WAAWgI,SACX,OAED,CACC,OACAhI,EAAAA,WAAWiI,KACX,OAED,CACC,QACAjI,EAAAA,WAAWkI,MACX,OAED,CACC,mBACAlI,EAAAA,WAAWmI,gBACX,OAED,CACC,aACAnI,EAAAA,WAAWoI,WACX,OAED,CACC,4BACApI,EAAAA,WAAWqI,WACX,OAED,CACC,oBACArI,EAAAA,WAAWsI,UACX,OAED,CACC,UACAtI,EAAAA,WAAWuI,QACX,MACA,GAED,CACC,kBACAvI,EAAAA,WAAWwI,OACX,MAED,CACC,aACAxI,EAAAA,WAAWyI,WACX,OAED,CACC,8BACAzI,EAAAA,WAAW0I,QACX,OAED,CACC,SACA1I,EAAAA,WAAW2I,OACX,OAED,CACC,oBACA3I,EAAAA,WAAW4I,SACX,OAED,CACC,yBACA5I,EAAAA,WAAW6I,WACX,OAED,CACC,aACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACA7I,EAAAA,WAAW8I,QACX,MACA,GAED,CACC,0BACA9I,EAAAA,WAAW+I,WACX,OAED,CACC,2BACA/I,EAAAA,WAAWgJ,QACX,MAED,CACC,oBACAhJ,EAAAA,WAAWiJ,QACX,OAED,CACC,QACAjJ,EAAAA,WAAWkJ,MACX,OAED,CACC,gBACAlJ,EAAAA,WAAWmJ,MACX,OAED,CACC,0BACAnJ,EAAAA,WAAWoJ,YACX,MAED,CACC,qCACApJ,EAAAA,WAAWqJ,aACX,OAED,CACC,cACArJ,EAAAA,WAAWsJ,WACX,MAED,CACC,YACAtJ,EAAAA,WAAWuJ,UACX,OAED,CACC,gBACAvJ,EAAAA,WAAWwJ,MACX,OAED,CACC,UACAxJ,EAAAA,WAAWyJ,QACX,OAED,CACC,OACAzJ,EAAAA,WAAW0J,KACX,OAED,CACC,iBACA1J,EAAAA,WAAW2J,cACX,OAED,CACC,+BACA3J,EAAAA,WAAW4J,WACX,OAED,CACC,2BACA5J,EAAAA,WAAW6J,uBACX,QAED,CACC,iBACA7J,EAAAA,WAAW8J,OACX,KACA,GAED,CACC,kBACA9J,EAAAA,WAAW+J,KACX,OAED,CACC,wBACA/J,EAAAA,WAAWgK,SACX,MAED,CACC,QACAhK,EAAAA,WAAWiK,MACX,OAED,CACC,wBACAjK,EAAAA,WAAWkK,UACX,OAED,CACC,kBACAlK,EAAAA,WAAWmK,OACX,OAED,CACC,mBACAnK,EAAAA,WAAWoK,eACX,OAED,CACC,WACApK,EAAAA,WAAWqK,SACX,OAED,CACC,cACArK,EAAAA,WAAWsK,KACX,MAED,CACC,cACAtK,EAAAA,WAAWuK,YACX,MAED,CACC,kBACAvK,EAAAA,WAAWwK,OACX,MAED,CACC,WACAxK,EAAAA,WAAWyK,SACX,OAED,CACC,cACAzK,EAAAA,WAAW0K,WACX,IACA,EACA,CAAC,MAAO,QAET,CACC,iBACA1K,EAAAA,WAAW2K,MACX,OAED,CACC,uBACA3K,EAAAA,WAAW4K,QACX,MACA,GAED,CACC,oBACA5K,EAAAA,WAAW6K,QACX,MAED,CACC,kBACA7K,EAAAA,WAAW8K,OACX,IACA,GAED,CACC,SACA9K,EAAAA,WAAW+K,OACX,OAED,CACC,sCACA/K,EAAAA,WAAWgL,gBACX,MACA,GAED,CACC,eACAhL,EAAAA,WAAWiL,YACX,OAED,CACC,wBACAjL,EAAAA,WAAWkL,mBACX,QAED,CACC,cACA,KACA,IACA,EACA,CACC,QAGF,CACC,iDACAlL,EAAAA,WAAWmL,YACX,MACA,GAED,CACC,uDACAnL,EAAAA,WAAWoL,uBACX,OAED,CACC,mCACA,KACA,IACA,EACA,CACC,QAGF,CACC,QACApL,EAAAA,WAAWqL,MACX,OAED,CACC,aACArL,EAAAA,WAAWsL,UACX,OAED,CACC,8CACAtL,EAAAA,WAAWuL,mBACX,OAED,CACC,6CACAvL,EAAAA,WAAWwL,YACX,OAED,CACC,oBACAxL,EAAAA,WAAWyL,QACX,OAED,CACC,kBACAzL,EAAAA,WAAW0L,OACX,OAED,CACC,aACA1L,EAAAA,WAAW2L,WACX,OAED,CACC,eACA3L,EAAAA,WAAW4L,YACX,OAED,CACC,YACA5L,EAAAA,WAAW6L,UACX,MAED,CACC,eACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACA7L,EAAAA,WAAW8L,SACX,OAED,CACC,uBACA9L,EAAAA,WAAW+L,SACX,OAED,CACC,kBACA/L,EAAAA,WAAWgM,eACX,OAED,CACC,uBACAhM,EAAAA,WAAWiM,QACX,OAED,CACC,eACAjM,EAAAA,WAAWkM,YACX,MAED,CACC,qBACAlM,EAAAA,WAAWmM,WACX,MAED,CACC,gCACAnM,EAAAA,WAAWoM,WACX,OAED,CACC,iBACApM,EAAAA,WAAWqM,MACX,MAED,CACC,0BACArM,EAAAA,WAAWsM,SACX,MAED,CACC,qBACAtM,EAAAA,WAAWuM,MACX,OAED,CACC,WACAvM,EAAAA,WAAWwM,SACX,OAED,CACC,yBACAxM,EAAAA,WAAWyM,oBACX,KACA,GAED,CACC,YACAzM,EAAAA,WAAW0M,UACX,OAED,CACC,mBACA1M,EAAAA,WAAW2M,OACX,MAED,CACC,wBACA3M,EAAAA,WAAW4M,YACX,MAED,CACC,mBACA5M,EAAAA,WAAW6M,MACX,OAED,CACC,cACA7M,EAAAA,WAAW8M,OACX,OAED,CACC,aACA9M,EAAAA,WAAW+M,WACX,OAED,CACC,WACA/M,EAAAA,WAAWgN,SACX,OAED,CACC,iBACAhN,EAAAA,WAAWiN,SACX,MAED,CACC,cACAjN,EAAAA,WAAWkN,WACX,OAED,CACC,OACAlN,EAAAA,WAAWmN,KACX,OAED,CACC,UACAnN,EAAAA,WAAWoN,QACX,OAED,CACC,QACApN,EAAAA,WAAWqN,MACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,oBACArN,EAAAA,WAAWsN,QACX,OAED,CACC,mBACAtN,EAAAA,WAAWuN,OACX,MAED,CACC,eACAvN,EAAAA,WAAWwN,aACX,OAED,CACC,2BACAxN,EAAAA,WAAWyN,sBACX,QAED,CACC,SACAzN,EAAAA,WAAW0N,OACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACA1N,EAAAA,WAAW2N,OACX,OAED,CACC,oBACA3N,EAAAA,WAAW4N,QACX,OAED,CACC,qDACA5N,EAAAA,WAAW6N,mBACX,OAED,CACC,iBACA7N,EAAAA,WAAW8N,cACX,KACA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCôteDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraçao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRéunion = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthélemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSãoToméAndPríncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÅlandIslands = 'ax',\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class NgxIntlTelInputService {\n\tconstructor() {}\n}\n","export enum SearchCountryField {\n\tDialCode = 'dialCode',\n\tIso2 = 'iso2',\n\tName = 'name',\n\tAll = 'all'\n}\n","export enum TooltipLabel {\n\tName = 'name',\n\tIso2 = 'iso2'\n}\n","import { CountryISO } from '../enums/country-iso.enum';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class CountryCode {\n\tpublic allCountries = [\n\t\t[\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\n\t\t\tCountryISO.Afghanistan,\n\t\t\t'93'\n\t\t],\n\t\t[\n\t\t\t'Albania (Shqipëri)',\n\t\t\tCountryISO.Albania,\n\t\t\t'355'\n\t\t],\n\t\t[\n\t\t\t'Algeria (‫الجزائر‬‎)',\n\t\t\tCountryISO.Algeria,\n\t\t\t'213'\n\t\t],\n\t\t[\n\t\t\t'American Samoa',\n\t\t\t'as',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'684',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Andorra',\n\t\t\tCountryISO.Andorra,\n\t\t\t'376'\n\t\t],\n\t\t[\n\t\t\t'Angola',\n\t\t\tCountryISO.Angola,\n\t\t\t'244'\n\t\t],\n\t\t[\n\t\t\t'Anguilla',\n\t\t\t'ai',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'264',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Antigua and Barbuda',\n\t\t\t'ag',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'268',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Argentina',\n\t\t\tCountryISO.Argentina,\n\t\t\t'54'\n\t\t],\n\t\t[\n\t\t\t'Armenia (Հայաստան)',\n\t\t\tCountryISO.Armenia,\n\t\t\t'374'\n\t\t],\n\t\t[\n\t\t\t'Aruba',\n\t\t\tCountryISO.Aruba,\n\t\t\t'297'\n\t\t],\n\t\t[\n\t\t\t'Australia',\n\t\t\tCountryISO.Australia,\n\t\t\t'61',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Austria (Österreich)',\n\t\t\tCountryISO.Austria,\n\t\t\t'43'\n\t\t],\n\t\t[\n\t\t\t'Azerbaijan (Azərbaycan)',\n\t\t\tCountryISO.Azerbaijan,\n\t\t\t'994'\n\t\t],\n\t\t[\n\t\t\t'Bahamas',\n\t\t\t'bs',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'242',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bahrain (‫البحرين‬‎)',\n\t\t\tCountryISO.Bahrain,\n\t\t\t'973'\n\t\t],\n\t\t[\n\t\t\t'Bangladesh (বাংলাদেশ)',\n\t\t\tCountryISO.Bangladesh,\n\t\t\t'880'\n\t\t],\n\t\t[\n\t\t\t'Barbados',\n\t\t\t'bb',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'246',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Belarus (Беларусь)',\n\t\t\tCountryISO.Belarus,\n\t\t\t'375'\n\t\t],\n\t\t[\n\t\t\t'Belgium (België)',\n\t\t\tCountryISO.Belgium,\n\t\t\t'32'\n\t\t],\n\t\t[\n\t\t\t'Belize',\n\t\t\tCountryISO.Belize,\n\t\t\t'501'\n\t\t],\n\t\t[\n\t\t\t'Benin (Bénin)',\n\t\t\tCountryISO.Benin,\n\t\t\t'229'\n\t\t],\n\t\t[\n\t\t\t'Bermuda',\n\t\t\t'bm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'441',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bhutan (འབྲུག)',\n\t\t\tCountryISO.Bhutan,\n\t\t\t'975'\n\t\t],\n\t\t[\n\t\t\t'Bolivia',\n\t\t\tCountryISO.Bolivia,\n\t\t\t'591'\n\t\t],\n\t\t[\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\n\t\t\tCountryISO.BosniaAndHerzegovina,\n\t\t\t'387'\n\t\t],\n\t\t[\n\t\t\t'Botswana',\n\t\t\tCountryISO.Botswana,\n\t\t\t'267'\n\t\t],\n\t\t[\n\t\t\t'Brazil (Brasil)',\n\t\t\tCountryISO.Brazil,\n\t\t\t'55'\n\t\t],\n\t\t[\n\t\t\t'British Indian Ocean Territory',\n\t\t\tCountryISO.BritishIndianOceanTerritory,\n\t\t\t'246'\n\t\t],\n\t\t[\n\t\t\t'British Virgin Islands',\n\t\t\t'vg',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'284',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Brunei',\n\t\t\tCountryISO.Brunei,\n\t\t\t'673'\n\t\t],\n\t\t[\n\t\t\t'Bulgaria (България)',\n\t\t\tCountryISO.Bulgaria,\n\t\t\t'359'\n\t\t],\n\t\t[\n\t\t\t'Burkina Faso',\n\t\t\tCountryISO.BurkinaFaso,\n\t\t\t'226'\n\t\t],\n\t\t[\n\t\t\t'Burundi (Uburundi)',\n\t\t\tCountryISO.Burundi,\n\t\t\t'257'\n\t\t],\n\t\t[\n\t\t\t'Cambodia (កម្ពុជា)',\n\t\t\tCountryISO.Cambodia,\n\t\t\t'855'\n\t\t],\n\t\t[\n\t\t\t'Cameroon (Cameroun)',\n\t\t\tCountryISO.Cameroon,\n\t\t\t'237'\n\t\t],\n\t\t[\n\t\t\t'Canada',\n\t\t\tCountryISO.Canada,\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n\t\t\t\t'819', '825', '867', '873', '902', '905'\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Cape Verde (Kabu Verdi)',\n\t\t\tCountryISO.CapeVerde,\n\t\t\t'238'\n\t\t],\n\t\t[\n\t\t\t'Caribbean Netherlands',\n\t\t\tCountryISO.CaribbeanNetherlands,\n\t\t\t'599',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Cayman Islands',\n\t\t\t'ky',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'345',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Central African Republic (République centrafricaine)',\n\t\t\tCountryISO.CentralAfricanRepublic,\n\t\t\t'236'\n\t\t],\n\t\t[\n\t\t\t'Chad (Tchad)',\n\t\t\tCountryISO.Chad,\n\t\t\t'235'\n\t\t],\n\t\t[\n\t\t\t'Chile',\n\t\t\tCountryISO.Chile,\n\t\t\t'56'\n\t\t],\n\t\t[\n\t\t\t'China (中国)',\n\t\t\tCountryISO.China,\n\t\t\t'86'\n\t\t],\n\t\t[\n\t\t\t'Christmas Island',\n\t\t\tCountryISO.ChristmasIsland,\n\t\t\t'61',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Cocos (Keeling) Islands',\n\t\t\tCountryISO.Cocos,\n\t\t\t'61',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Colombia',\n\t\t\tCountryISO.Colombia,\n\t\t\t'57'\n\t\t],\n\t\t[\n\t\t\t'Comoros (‫جزر القمر‬‎)',\n\t\t\tCountryISO.Comoros,\n\t\t\t'269'\n\t\t],\n\t\t[\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n\t\t\t'243'\n\t\t],\n\t\t[\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\n\t\t\t'242'\n\t\t],\n\t\t[\n\t\t\t'Cook Islands',\n\t\t\tCountryISO.CookIslands,\n\t\t\t'682'\n\t\t],\n\t\t[\n\t\t\t'Costa Rica',\n\t\t\tCountryISO.CostaRica,\n\t\t\t'506'\n\t\t],\n\t\t[\n\t\t\t'Côte d’Ivoire',\n\t\t\tCountryISO.CôteDIvoire,\n\t\t\t'225'\n\t\t],\n\t\t[\n\t\t\t'Croatia (Hrvatska)',\n\t\t\tCountryISO.Croatia,\n\t\t\t'385'\n\t\t],\n\t\t[\n\t\t\t'Cuba',\n\t\t\tCountryISO.Cuba,\n\t\t\t'53'\n\t\t],\n\t\t[\n\t\t\t'Curaçao',\n\t\t\tCountryISO.Curaçao,\n\t\t\t'599',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Cyprus (Κύπρος)',\n\t\t\tCountryISO.Cyprus,\n\t\t\t'357'\n\t\t],\n\t\t[\n\t\t\t'Czech Republic (Česká republika)',\n\t\t\tCountryISO.CzechRepublic,\n\t\t\t'420'\n\t\t],\n\t\t[\n\t\t\t'Denmark (Danmark)',\n\t\t\tCountryISO.Denmark,\n\t\t\t'45'\n\t\t],\n\t\t[\n\t\t\t'Djibouti',\n\t\t\tCountryISO.Djibouti,\n\t\t\t'253'\n\t\t],\n\t\t[\n\t\t\t'Dominica',\n\t\t\tCountryISO.Dominica,\n\t\t\t'1767'\n\t\t],\n\t\t[\n\t\t\t'Dominican Republic (República Dominicana)',\n\t\t\tCountryISO.DominicanRepublic,\n\t\t\t'1',\n\t\t\t2,\n\t\t\t['809', '829', '849']\n\t\t],\n\t\t[\n\t\t\t'Ecuador',\n\t\t\tCountryISO.Ecuador,\n\t\t\t'593'\n\t\t],\n\t\t[\n\t\t\t'Egypt (‫مصر‬‎)',\n\t\t\tCountryISO.Egypt,\n\t\t\t'20'\n\t\t],\n\t\t[\n\t\t\t'El Salvador',\n\t\t\tCountryISO.ElSalvador,\n\t\t\t'503'\n\t\t],\n\t\t[\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\n\t\t\tCountryISO.EquatorialGuinea,\n\t\t\t'240'\n\t\t],\n\t\t[\n\t\t\t'Eritrea',\n\t\t\tCountryISO.Eritrea,\n\t\t\t'291'\n\t\t],\n\t\t[\n\t\t\t'Estonia (Eesti)',\n\t\t\tCountryISO.Estonia,\n\t\t\t'372'\n\t\t],\n\t\t[\n\t\t\t'Ethiopia',\n\t\t\tCountryISO.Ethiopia,\n\t\t\t'251'\n\t\t],\n\t\t[\n\t\t\t'Falkland Islands (Islas Malvinas)',\n\t\t\tCountryISO.FalklandIslands,\n\t\t\t'500'\n\t\t],\n\t\t[\n\t\t\t'Faroe Islands (Føroyar)',\n\t\t\tCountryISO.FaroeIslands,\n\t\t\t'298'\n\t\t],\n\t\t[\n\t\t\t'Fiji',\n\t\t\tCountryISO.Fiji,\n\t\t\t'679'\n\t\t],\n\t\t[\n\t\t\t'Finland (Suomi)',\n\t\t\tCountryISO.Finland,\n\t\t\t'358',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'France',\n\t\t\tCountryISO.France,\n\t\t\t'33'\n\t\t],\n\t\t[\n\t\t\t'French Guiana (Guyane française)',\n\t\t\tCountryISO.FrenchGuiana,\n\t\t\t'594'\n\t\t],\n\t\t[\n\t\t\t'French Polynesia (Polynésie française)',\n\t\t\tCountryISO.FrenchPolynesia,\n\t\t\t'689'\n\t\t],\n\t\t[\n\t\t\t'Gabon',\n\t\t\tCountryISO.Gabon,\n\t\t\t'241'\n\t\t],\n\t\t[\n\t\t\t'Gambia',\n\t\t\tCountryISO.Gambia,\n\t\t\t'220'\n\t\t],\n\t\t[\n\t\t\t'Georgia (საქართველო)',\n\t\t\tCountryISO.Georgia,\n\t\t\t'995'\n\t\t],\n\t\t[\n\t\t\t'Germany (Deutschland)',\n\t\t\tCountryISO.Germany,\n\t\t\t'49'\n\t\t],\n\t\t[\n\t\t\t'Ghana (Gaana)',\n\t\t\tCountryISO.Ghana,\n\t\t\t'233'\n\t\t],\n\t\t[\n\t\t\t'Gibraltar',\n\t\t\tCountryISO.Gibraltar,\n\t\t\t'350'\n\t\t],\n\t\t[\n\t\t\t'Greece (Ελλάδα)',\n\t\t\tCountryISO.Greece,\n\t\t\t'30'\n\t\t],\n\t\t[\n\t\t\t'Greenland (Kalaallit Nunaat)',\n\t\t\tCountryISO.Greenland,\n\t\t\t'299'\n\t\t],\n\t\t[\n\t\t\t'Grenada',\n\t\t\tCountryISO.Grenada,\n\t\t\t'1473'\n\t\t],\n\t\t[\n\t\t\t'Guadeloupe',\n\t\t\tCountryISO.Guadeloupe,\n\t\t\t'590',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Guam',\n\t\t\t'gu',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'671',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Guatemala',\n\t\t\tCountryISO.Guatemala,\n\t\t\t'502'\n\t\t],\n\t\t[\n\t\t\t'Guernsey',\n\t\t\tCountryISO.Guernsey,\n\t\t\t'44',\n\t\t\t1,\n\t\t\t[1481]\n\t\t],\n\t\t[\n\t\t\t'Guinea (Guinée)',\n\t\t\tCountryISO.Guinea,\n\t\t\t'224'\n\t\t],\n\t\t[\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\n\t\t\tCountryISO.GuineaBissau,\n\t\t\t'245'\n\t\t],\n\t\t[\n\t\t\t'Guyana',\n\t\t\tCountryISO.Guyana,\n\t\t\t'592'\n\t\t],\n\t\t[\n\t\t\t'Haiti',\n\t\t\tCountryISO.Haiti,\n\t\t\t'509'\n\t\t],\n\t\t[\n\t\t\t'Honduras',\n\t\t\tCountryISO.Honduras,\n\t\t\t'504'\n\t\t],\n\t\t[\n\t\t\t'Hong Kong (香港)',\n\t\t\tCountryISO.HongKong,\n\t\t\t'852'\n\t\t],\n\t\t[\n\t\t\t'Hungary (Magyarország)',\n\t\t\tCountryISO.Hungary,\n\t\t\t'36'\n\t\t],\n\t\t[\n\t\t\t'Iceland (Ísland)',\n\t\t\tCountryISO.Iceland,\n\t\t\t'354'\n\t\t],\n\t\t[\n\t\t\t'India (भारत)',\n\t\t\tCountryISO.India,\n\t\t\t'91'\n\t\t],\n\t\t[\n\t\t\t'Indonesia',\n\t\t\tCountryISO.Indonesia,\n\t\t\t'62'\n\t\t],\n\t\t[\n\t\t\t'Iran (‫ایران‬‎)',\n\t\t\tCountryISO.Iran,\n\t\t\t'98'\n\t\t],\n\t\t[\n\t\t\t'Iraq (‫العراق‬‎)',\n\t\t\tCountryISO.Iraq,\n\t\t\t'964'\n\t\t],\n\t\t[\n\t\t\t'Ireland',\n\t\t\tCountryISO.Ireland,\n\t\t\t'353'\n\t\t],\n\t\t[\n\t\t\t'Isle of Man',\n\t\t\tCountryISO.IsleOfMan,\n\t\t\t'44',\n\t\t\t2,\n\t\t\t[1624]\n\t\t],\n\t\t[\n\t\t\t'Israel (‫ישראל‬‎)',\n\t\t\tCountryISO.Israel,\n\t\t\t'972'\n\t\t],\n\t\t[\n\t\t\t'Italy (Italia)',\n\t\t\tCountryISO.Italy,\n\t\t\t'39',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Jamaica',\n\t\t\t'jm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'876',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Japan (日本)',\n\t\t\tCountryISO.Japan,\n\t\t\t'81'\n\t\t],\n\t\t[\n\t\t\t'Jersey',\n\t\t\tCountryISO.Jersey,\n\t\t\t'44',\n\t\t\t3,\n\t\t\t[1534]\n\t\t],\n\t\t[\n\t\t\t'Jordan (‫الأردن‬‎)',\n\t\t\tCountryISO.Jordan,\n\t\t\t'962'\n\t\t],\n\t\t[\n\t\t\t'Kazakhstan (Казахстан)',\n\t\t\tCountryISO.Kazakhstan,\n\t\t\t'7',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Kenya',\n\t\t\tCountryISO.Kenya,\n\t\t\t'254'\n\t\t],\n\t\t[\n\t\t\t'Kiribati',\n\t\t\tCountryISO.Kiribati,\n\t\t\t'686'\n\t\t],\n\t\t[\n\t\t\t'Kosovo',\n\t\t\tCountryISO.Kosovo,\n\t\t\t'383'\n\t\t],\n\t\t[\n\t\t\t'Kuwait (‫الكويت‬‎)',\n\t\t\tCountryISO.Kuwait,\n\t\t\t'965'\n\t\t],\n\t\t[\n\t\t\t'Kyrgyzstan (Кыргызстан)',\n\t\t\tCountryISO.Kyrgyzstan,\n\t\t\t'996'\n\t\t],\n\t\t[\n\t\t\t'Laos (ລາວ)',\n\t\t\tCountryISO.Laos,\n\t\t\t'856'\n\t\t],\n\t\t[\n\t\t\t'Latvia (Latvija)',\n\t\t\tCountryISO.Latvia,\n\t\t\t'371'\n\t\t],\n\t\t[\n\t\t\t'Lebanon (‫لبنان‬‎)',\n\t\t\tCountryISO.Lebanon,\n\t\t\t'961'\n\t\t],\n\t\t[\n\t\t\t'Lesotho',\n\t\t\tCountryISO.Lesotho,\n\t\t\t'266'\n\t\t],\n\t\t[\n\t\t\t'Liberia',\n\t\t\tCountryISO.Liberia,\n\t\t\t'231'\n\t\t],\n\t\t[\n\t\t\t'Libya (‫ليبيا‬‎)',\n\t\t\tCountryISO.Libya,\n\t\t\t'218'\n\t\t],\n\t\t[\n\t\t\t'Liechtenstein',\n\t\t\tCountryISO.Liechtenstein,\n\t\t\t'423'\n\t\t],\n\t\t[\n\t\t\t'Lithuania (Lietuva)',\n\t\t\tCountryISO.Lithuania,\n\t\t\t'370'\n\t\t],\n\t\t[\n\t\t\t'Luxembourg',\n\t\t\tCountryISO.Luxembourg,\n\t\t\t'352'\n\t\t],\n\t\t[\n\t\t\t'Macau (澳門)',\n\t\t\tCountryISO.Macau,\n\t\t\t'853'\n\t\t],\n\t\t[\n\t\t\t'Macedonia (FYROM) (Македонија)',\n\t\t\tCountryISO.Macedonia,\n\t\t\t'389'\n\t\t],\n\t\t[\n\t\t\t'Madagascar (Madagasikara)',\n\t\t\tCountryISO.Madagascar,\n\t\t\t'261'\n\t\t],\n\t\t[\n\t\t\t'Malawi',\n\t\t\tCountryISO.Malawi,\n\t\t\t'265'\n\t\t],\n\t\t[\n\t\t\t'Malaysia',\n\t\t\tCountryISO.Malaysia,\n\t\t\t'60'\n\t\t],\n\t\t[\n\t\t\t'Maldives',\n\t\t\tCountryISO.Maldives,\n\t\t\t'960'\n\t\t],\n\t\t[\n\t\t\t'Mali',\n\t\t\tCountryISO.Mali,\n\t\t\t'223'\n\t\t],\n\t\t[\n\t\t\t'Malta',\n\t\t\tCountryISO.Malta,\n\t\t\t'356'\n\t\t],\n\t\t[\n\t\t\t'Marshall Islands',\n\t\t\tCountryISO.MarshallIslands,\n\t\t\t'692'\n\t\t],\n\t\t[\n\t\t\t'Martinique',\n\t\t\tCountryISO.Martinique,\n\t\t\t'596'\n\t\t],\n\t\t[\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\n\t\t\tCountryISO.Mauritania,\n\t\t\t'222'\n\t\t],\n\t\t[\n\t\t\t'Mauritius (Moris)',\n\t\t\tCountryISO.Mauritius,\n\t\t\t'230'\n\t\t],\n\t\t[\n\t\t\t'Mayotte',\n\t\t\tCountryISO.Mayotte,\n\t\t\t'262',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Mexico (México)',\n\t\t\tCountryISO.Mexico,\n\t\t\t'52'\n\t\t],\n\t\t[\n\t\t\t'Micronesia',\n\t\t\tCountryISO.Micronesia,\n\t\t\t'691'\n\t\t],\n\t\t[\n\t\t\t'Moldova (Republica Moldova)',\n\t\t\tCountryISO.Moldova,\n\t\t\t'373'\n\t\t],\n\t\t[\n\t\t\t'Monaco',\n\t\t\tCountryISO.Monaco,\n\t\t\t'377'\n\t\t],\n\t\t[\n\t\t\t'Mongolia (Монгол)',\n\t\t\tCountryISO.Mongolia,\n\t\t\t'976'\n\t\t],\n\t\t[\n\t\t\t'Montenegro (Crna Gora)',\n\t\t\tCountryISO.Montenegro,\n\t\t\t'382'\n\t\t],\n\t\t[\n\t\t\t'Montserrat',\n\t\t\t'ms',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'664',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Morocco (‫المغرب‬‎)',\n\t\t\tCountryISO.Morocco,\n\t\t\t'212',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Mozambique (Moçambique)',\n\t\t\tCountryISO.Mozambique,\n\t\t\t'258'\n\t\t],\n\t\t[\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\n\t\t\tCountryISO.Myanmar,\n\t\t\t'95'\n\t\t],\n\t\t[\n\t\t\t'Namibia (Namibië)',\n\t\t\tCountryISO.Namibia,\n\t\t\t'264'\n\t\t],\n\t\t[\n\t\t\t'Nauru',\n\t\t\tCountryISO.Nauru,\n\t\t\t'674'\n\t\t],\n\t\t[\n\t\t\t'Nepal (नेपाल)',\n\t\t\tCountryISO.Nepal,\n\t\t\t'977'\n\t\t],\n\t\t[\n\t\t\t'Netherlands (Nederland)',\n\t\t\tCountryISO.Netherlands,\n\t\t\t'31'\n\t\t],\n\t\t[\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\n\t\t\tCountryISO.NewCaledonia,\n\t\t\t'687'\n\t\t],\n\t\t[\n\t\t\t'New Zealand',\n\t\t\tCountryISO.NewZealand,\n\t\t\t'64'\n\t\t],\n\t\t[\n\t\t\t'Nicaragua',\n\t\t\tCountryISO.Nicaragua,\n\t\t\t'505'\n\t\t],\n\t\t[\n\t\t\t'Niger (Nijar)',\n\t\t\tCountryISO.Niger,\n\t\t\t'227'\n\t\t],\n\t\t[\n\t\t\t'Nigeria',\n\t\t\tCountryISO.Nigeria,\n\t\t\t'234'\n\t\t],\n\t\t[\n\t\t\t'Niue',\n\t\t\tCountryISO.Niue,\n\t\t\t'683'\n\t\t],\n\t\t[\n\t\t\t'Norfolk Island',\n\t\t\tCountryISO.NorfolkIsland,\n\t\t\t'672'\n\t\t],\n\t\t[\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\n\t\t\tCountryISO.NorthKorea,\n\t\t\t'850'\n\t\t],\n\t\t[\n\t\t\t'Northern Mariana Islands',\n\t\t\tCountryISO.NorthernMarianaIslands,\n\t\t\t'1670'\n\t\t],\n\t\t[\n\t\t\t'Norway (Norge)',\n\t\t\tCountryISO.Norway,\n\t\t\t'47',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Oman (‫عُمان‬‎)',\n\t\t\tCountryISO.Oman,\n\t\t\t'968'\n\t\t],\n\t\t[\n\t\t\t'Pakistan (‫پاکستان‬‎)',\n\t\t\tCountryISO.Pakistan,\n\t\t\t'92'\n\t\t],\n\t\t[\n\t\t\t'Palau',\n\t\t\tCountryISO.Palau,\n\t\t\t'680'\n\t\t],\n\t\t[\n\t\t\t'Palestine (‫فلسطين‬‎)',\n\t\t\tCountryISO.Palestine,\n\t\t\t'970'\n\t\t],\n\t\t[\n\t\t\t'Panama (Panamá)',\n\t\t\tCountryISO.Panama,\n\t\t\t'507'\n\t\t],\n\t\t[\n\t\t\t'Papua New Guinea',\n\t\t\tCountryISO.PapuaNewGuinea,\n\t\t\t'675'\n\t\t],\n\t\t[\n\t\t\t'Paraguay',\n\t\t\tCountryISO.Paraguay,\n\t\t\t'595'\n\t\t],\n\t\t[\n\t\t\t'Peru (Perú)',\n\t\t\tCountryISO.Peru,\n\t\t\t'51'\n\t\t],\n\t\t[\n\t\t\t'Philippines',\n\t\t\tCountryISO.Philippines,\n\t\t\t'63'\n\t\t],\n\t\t[\n\t\t\t'Poland (Polska)',\n\t\t\tCountryISO.Poland,\n\t\t\t'48'\n\t\t],\n\t\t[\n\t\t\t'Portugal',\n\t\t\tCountryISO.Portugal,\n\t\t\t'351'\n\t\t],\n\t\t[\n\t\t\t'Puerto Rico',\n\t\t\tCountryISO.PuertoRico,\n\t\t\t'1',\n\t\t\t3,\n\t\t\t['787', '939']\n\t\t],\n\t\t[\n\t\t\t'Qatar (‫قطر‬‎)',\n\t\t\tCountryISO.Qatar,\n\t\t\t'974'\n\t\t],\n\t\t[\n\t\t\t'Réunion (La Réunion)',\n\t\t\tCountryISO.Réunion,\n\t\t\t'262',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Romania (România)',\n\t\t\tCountryISO.Romania,\n\t\t\t'40'\n\t\t],\n\t\t[\n\t\t\t'Russia (Россия)',\n\t\t\tCountryISO.Russia,\n\t\t\t'7',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Rwanda',\n\t\t\tCountryISO.Rwanda,\n\t\t\t'250'\n\t\t],\n\t\t[\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\n\t\t\tCountryISO.SaintBarthélemy,\n\t\t\t'590',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Saint Helena',\n\t\t\tCountryISO.SaintHelena,\n\t\t\t'290'\n\t\t],\n\t\t[\n\t\t\t'Saint Kitts and Nevis',\n\t\t\tCountryISO.SaintKittsAndNevis,\n\t\t\t'1869'\n\t\t],\n\t\t[\n\t\t\t'Saint Lucia',\n\t\t\t'lc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'758',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\n\t\t\tCountryISO.SaintMartin,\n\t\t\t'590',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n\t\t\tCountryISO.SaintPierreAndMiquelon,\n\t\t\t'508'\n\t\t],\n\t\t[\n\t\t\t'Saint Vincent and the Grenadines',\n\t\t\t'vc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'784',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Samoa',\n\t\t\tCountryISO.Samoa,\n\t\t\t'685'\n\t\t],\n\t\t[\n\t\t\t'San Marino',\n\t\t\tCountryISO.SanMarino,\n\t\t\t'378'\n\t\t],\n\t\t[\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\n\t\t\tCountryISO.SãoToméAndPríncipe,\n\t\t\t'239'\n\t\t],\n\t\t[\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n\t\t\tCountryISO.SaudiArabia,\n\t\t\t'966'\n\t\t],\n\t\t[\n\t\t\t'Senegal (Sénégal)',\n\t\t\tCountryISO.Senegal,\n\t\t\t'221'\n\t\t],\n\t\t[\n\t\t\t'Serbia (Србија)',\n\t\t\tCountryISO.Serbia,\n\t\t\t'381'\n\t\t],\n\t\t[\n\t\t\t'Seychelles',\n\t\t\tCountryISO.Seychelles,\n\t\t\t'248'\n\t\t],\n\t\t[\n\t\t\t'Sierra Leone',\n\t\t\tCountryISO.SierraLeone,\n\t\t\t'232'\n\t\t],\n\t\t[\n\t\t\t'Singapore',\n\t\t\tCountryISO.Singapore,\n\t\t\t'65'\n\t\t],\n\t\t[\n\t\t\t'Sint Maarten',\n\t\t\t'sx',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'721',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Slovakia (Slovensko)',\n\t\t\tCountryISO.Slovakia,\n\t\t\t'421'\n\t\t],\n\t\t[\n\t\t\t'Slovenia (Slovenija)',\n\t\t\tCountryISO.Slovenia,\n\t\t\t'386'\n\t\t],\n\t\t[\n\t\t\t'Solomon Islands',\n\t\t\tCountryISO.SolomonIslands,\n\t\t\t'677'\n\t\t],\n\t\t[\n\t\t\t'Somalia (Soomaaliya)',\n\t\t\tCountryISO.Somalia,\n\t\t\t'252'\n\t\t],\n\t\t[\n\t\t\t'South Africa',\n\t\t\tCountryISO.SouthAfrica,\n\t\t\t'27'\n\t\t],\n\t\t[\n\t\t\t'South Korea (대한민국)',\n\t\t\tCountryISO.SouthKorea,\n\t\t\t'82'\n\t\t],\n\t\t[\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\n\t\t\tCountryISO.SouthSudan,\n\t\t\t'211'\n\t\t],\n\t\t[\n\t\t\t'Spain (España)',\n\t\t\tCountryISO.Spain,\n\t\t\t'34'\n\t\t],\n\t\t[\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\n\t\t\tCountryISO.SriLanka,\n\t\t\t'94'\n\t\t],\n\t\t[\n\t\t\t'Sudan (‫السودان‬‎)',\n\t\t\tCountryISO.Sudan,\n\t\t\t'249'\n\t\t],\n\t\t[\n\t\t\t'Suriname',\n\t\t\tCountryISO.Suriname,\n\t\t\t'597'\n\t\t],\n\t\t[\n\t\t\t'Svalbard and Jan Mayen',\n\t\t\tCountryISO.SvalbardAndJanMayen,\n\t\t\t'47',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Swaziland',\n\t\t\tCountryISO.Swaziland,\n\t\t\t'268'\n\t\t],\n\t\t[\n\t\t\t'Sweden (Sverige)',\n\t\t\tCountryISO.Sweden,\n\t\t\t'46'\n\t\t],\n\t\t[\n\t\t\t'Switzerland (Schweiz)',\n\t\t\tCountryISO.Switzerland,\n\t\t\t'41'\n\t\t],\n\t\t[\n\t\t\t'Syria (‫سوريا‬‎)',\n\t\t\tCountryISO.Syria,\n\t\t\t'963'\n\t\t],\n\t\t[\n\t\t\t'Taiwan (台灣)',\n\t\t\tCountryISO.Taiwan,\n\t\t\t'886'\n\t\t],\n\t\t[\n\t\t\t'Tajikistan',\n\t\t\tCountryISO.Tajikistan,\n\t\t\t'992'\n\t\t],\n\t\t[\n\t\t\t'Tanzania',\n\t\t\tCountryISO.Tanzania,\n\t\t\t'255'\n\t\t],\n\t\t[\n\t\t\t'Thailand (ไทย)',\n\t\t\tCountryISO.Thailand,\n\t\t\t'66'\n\t\t],\n\t\t[\n\t\t\t'Timor-Leste',\n\t\t\tCountryISO.TimorLeste,\n\t\t\t'670'\n\t\t],\n\t\t[\n\t\t\t'Togo',\n\t\t\tCountryISO.Togo,\n\t\t\t'228'\n\t\t],\n\t\t[\n\t\t\t'Tokelau',\n\t\t\tCountryISO.Tokelau,\n\t\t\t'690'\n\t\t],\n\t\t[\n\t\t\t'Tonga',\n\t\t\tCountryISO.Tonga,\n\t\t\t'676'\n\t\t],\n\t\t[\n\t\t\t'Trinidad and Tobago',\n\t\t\t'tt',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'868',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Tunisia (‫تونس‬‎)',\n\t\t\tCountryISO.Tunisia,\n\t\t\t'216'\n\t\t],\n\t\t[\n\t\t\t'Turkey (Türkiye)',\n\t\t\tCountryISO.Turkey,\n\t\t\t'90'\n\t\t],\n\t\t[\n\t\t\t'Turkmenistan',\n\t\t\tCountryISO.Turkmenistan,\n\t\t\t'993'\n\t\t],\n\t\t[\n\t\t\t'Turks and Caicos Islands',\n\t\t\tCountryISO.TurksAndCaicosIslands,\n\t\t\t'1649'\n\t\t],\n\t\t[\n\t\t\t'Tuvalu',\n\t\t\tCountryISO.Tuvalu,\n\t\t\t'688'\n\t\t],\n\t\t[\n\t\t\t'U.S. Virgin Islands',\n\t\t\t'vi',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'340',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Uganda',\n\t\t\tCountryISO.Uganda,\n\t\t\t'256'\n\t\t],\n\t\t[\n\t\t\t'Ukraine (Україна)',\n\t\t\tCountryISO.Ukraine,\n\t\t\t'380'\n\t\t],\n\t\t[\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n\t\t\tCountryISO.UnitedArabEmirates,\n\t\t\t'971'\n\t\t],\n\t\t[\n\t\t\t'United Kingdom',\n\t\t\tCountryISO.UnitedKingdom,\n\t\t\t'44',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'United States',\n\t\t\tCountryISO.UnitedStates,\n\t\t\t'1',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Uruguay',\n\t\t\tCountryISO.Uruguay,\n\t\t\t'598'\n\t\t],\n\t\t[\n\t\t\t'Uzbekistan (Oʻzbekiston)',\n\t\t\tCountryISO.Uzbekistan,\n\t\t\t'998'\n\t\t],\n\t\t[\n\t\t\t'Vanuatu',\n\t\t\tCountryISO.Vanuatu,\n\t\t\t'678'\n\t\t],\n\t\t[\n\t\t\t'Vatican City (Città del Vaticano)',\n\t\t\tCountryISO.VaticanCity,\n\t\t\t'39',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Venezuela',\n\t\t\tCountryISO.Venezuela,\n\t\t\t'58'\n\t\t],\n\t\t[\n\t\t\t'Vietnam (Việt Nam)',\n\t\t\tCountryISO.Vietnam,\n\t\t\t'84'\n\t\t],\n\t\t[\n\t\t\t'Wallis and Futuna',\n\t\t\tCountryISO.WallisAndFutuna,\n\t\t\t'681'\n\t\t],\n\t\t[\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\n\t\t\tCountryISO.WesternSahara,\n\t\t\t'212',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Yemen (‫اليمن‬‎)',\n\t\t\tCountryISO.Yemen,\n\t\t\t'967'\n\t\t],\n\t\t[\n\t\t\t'Zambia',\n\t\t\tCountryISO.Zambia,\n\t\t\t'260'\n\t\t],\n\t\t[\n\t\t\t'Zimbabwe',\n\t\t\tCountryISO.Zimbabwe,\n\t\t\t'263'\n\t\t],\n\t\t[\n\t\t\t'Åland Islands',\n\t\t\tCountryISO.ÅlandIslands,\n\t\t\t'358',\n\t\t\t1\n\t\t]\n\t];\n}","import * as lpn from 'google-libphonenumber';\n\n/*\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\nThis happens because I've expanded control with nativeElement via\n'NativeElementInjectorDirective' to get an access to the element.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport const phoneNumberValidator = (control: any) => {\n\tif (!control.value) {\n\t\treturn;\n\t}\n\t// Find <input> inside injected nativeElement and get its \"id\".\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\n\tconst inputBox: HTMLInputElement = el\n\t\t? el.querySelector('input[type=\"tel\"]')\n\t\t: undefined;\n\tif (inputBox) {\n\t\tconst id = inputBox.id;\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\n\t\tif (isCheckValidation === 'true') {\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\n\n\t\t\tinputBox.setCustomValidity('Invalid field.');\n\n\t\t\tlet number: lpn.PhoneNumber;\n\n\t\t\ttry {\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\n\t\t\t\t\tcontrol.value.number,\n\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tif (isRequired === true) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (control.value) {\n\t\t\t\tif (!number) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\n\t\t\t\t\t\t\tnumber,\n\t\t\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isCheckValidation === 'false') {\n\t\t\tinputBox.setCustomValidity('');\n\n\t\t\tcontrol.clearValidators();\n\t\t}\n\t}\n\treturn;\n};\n","import * as lpn from 'google-libphonenumber';\n\nimport {\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tViewChild,\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { CountryCode } from './data/country-code';\nimport { CountryISO } from './enums/country-iso.enum';\nimport { SearchCountryField } from './enums/search-country-field.enum';\nimport { TooltipLabel } from './enums/tooltip-label.enum';\nimport { ChangeData } from './interfaces/change-data';\nimport { Country } from './model/country.model';\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: 'ngx-intl-tel-input',\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\n\tstyleUrls: ['./ngx-intl-tel-input.component.css'],\n\tproviders: [\n\t\tCountryCode,\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\t// tslint:disable-next-line:no-forward-ref\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\n\t\t\tmulti: true,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseValue: phoneNumberValidator,\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\n\t@Input() value = '';\n\t@Input() preferredCountries: Array<string> = [];\n\t@Input() enablePlaceholder = true;\n\t@Input() cssClass = 'form-control';\n\t@Input() onlyCountries: Array<string> = [];\n\t@Input() enableAutoCountrySelect = true;\n\t@Input() searchCountryFlag = false;\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\n\t@Input() searchCountryPlaceholder = 'Search Country';\n\t@Input() maxLength = '';\n\t@Input() tooltipField: TooltipLabel;\n\t@Input() selectFirstCountry = true;\n\t@Input() selectedCountryISO: CountryISO;\n\t@Input() phoneValidation = true;\n\t@Input() inputId = 'phone';\n\t@Input() separateDialCode = false;\n\tseparateDialCodeClass: string;\n\n\t@Output() readonly countryChange = new EventEmitter<Country>();\n\n\tselectedCountry: Country = {\n\t\tareaCodes: undefined,\n\t\tdialCode: '',\n\t\thtmlId: '',\n\t\tflagClass: '',\n\t\tiso2: '',\n\t\tname: '',\n\t\tplaceHolder: '',\n\t\tpriority: 0,\n\t};\n\n\tphoneNumber = '';\n\tallCountries: Array<Country> = [];\n\tpreferredCountriesInDropDown: Array<Country> = [];\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\n\tdisabled = false;\n\terrors: Array<any> = ['Phone number is required.'];\n\tcountrySearchText = '';\n\n\t@ViewChild('countryList') countryList: ElementRef;\n\n\tonTouched = () => {};\n\tpropagateChange = (_: ChangeData) => {};\n\n\tconstructor(private countryCodeData: CountryCode) {}\n\n\tngOnInit() {\n\t\tthis.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst selectedISO = changes['selectedCountryISO'];\n\t\tif (\n\t\t\tthis.allCountries &&\n\t\t\tselectedISO &&\n\t\t\tselectedISO.currentValue !== selectedISO.previousValue\n\t\t) {\n\t\t\tthis.getSelectedCountry();\n\t\t}\n\t\tif (changes.preferredCountries) {\n\t\t\tthis.getPreferredCountries();\n\t\t}\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\t/*\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\n\t*/\n\tinit() {\n\t\tthis.fetchCountryData();\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.getPreferredCountries();\n\t\t}\n\t\tif (this.onlyCountries.length) {\n\t\t\tthis.allCountries = this.allCountries.filter((c) =>\n\t\t\t\tthis.onlyCountries.includes(c.iso2)\n\t\t\t);\n\t\t}\n\t\tif (this.selectFirstCountry) {\n\t\t\tif (this.preferredCountriesInDropDown.length) {\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n\t\t\t} else {\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\n\t\t\t}\n\t\t}\n\t\tthis.getSelectedCountry();\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tgetPreferredCountries() {\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.preferredCountriesInDropDown = [];\n\t\t\tthis.preferredCountries.forEach((iso2) => {\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\n\t\t\t\t\treturn c.iso2 === iso2;\n\t\t\t\t});\n\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSelectedCountry() {\n\t\tif (this.selectedCountryISO) {\n\t\t\tthis.selectedCountry = this.allCountries.find((c) => {\n\t\t\t\treturn c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\n\t\t\t});\n\t\t\tif (this.selectedCountry) {\n\t\t\t\tif (this.phoneNumber) {\n\t\t\t\t\tthis.onPhoneNumberChange();\n\t\t\t\t} else {\n\t\t\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\t\t\tthis.propagateChange(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetSelectedCountry(country: Country) {\n\t\tthis.selectedCountry = country;\n\t\tthis.countryChange.emit(country);\n\t}\n\n\t/**\n\t * Search country based on country name, iso2, dialCode or all of them.\n\t */\n\tsearchCountry() {\n\t\tif (!this.countrySearchText) {\n\t\t\tthis.countryList.nativeElement\n\t\t\t\t.querySelector('.iti__country-list li')\n\t\t\t\t.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\n\t\tconst country = this.allCountries.filter((c) => {\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n\t\t\t\t// Search in all fields\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Or search by specific SearchCountryField(s)\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (country.length > 0) {\n\t\t\tconst el = this.countryList.nativeElement.querySelector(\n\t\t\t\t'#' + country[0].htmlId\n\t\t\t);\n\t\t\tif (el) {\n\t\t\t\tel.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tpublic onPhoneNumberChange(): void {\n\t\tlet countryCode: string | undefined;\n\t\t// Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\n\t\tif (this.phoneNumber && typeof this.phoneNumber === 'object') {\n\t\t\tconst numberObj: ChangeData = this.phoneNumber;\n\t\t\tthis.phoneNumber = numberObj.number;\n\t\t\tcountryCode = numberObj.countryCode;\n\t\t}\n\n\t\tthis.value = this.phoneNumber;\n\t\tcountryCode = countryCode || this.selectedCountry.iso2.toUpperCase();\n\t\tlet number: lpn.PhoneNumber;\n\t\ttry {\n\t\t\tnumber = this.phoneUtil.parse(this.phoneNumber, countryCode);\n\t\t} catch (e) {}\n\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n\t\tif (this.enableAutoCountrySelect) {\n\t\t\tcountryCode =\n\t\t\t\tnumber && number.getCountryCode()\n\t\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\n\t\t\t\t\t: this.selectedCountry.iso2;\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\n\t\t\t\tconst newCountry = this.allCountries.sort((a, b) => {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}).find(\n\t\t\t\t\t(c) => c.iso2 === countryCode\n\t\t\t\t);\n\t\t\t\tif (newCountry) {\n\t\t\t\t\tthis.selectedCountry = newCountry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (!this.value) {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t} else {\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onCountrySelect(country: Country, el): void {\n\t\tthis.setSelectedCountry(country);\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (this.phoneNumber && this.phoneNumber.length > 0) {\n\t\t\tthis.value = this.phoneNumber;\n\n\t\t\tlet number: lpn.PhoneNumber;\n\t\t\ttry {\n\t\t\t\tnumber = this.phoneUtil.parse(\n\t\t\t\t\tthis.phoneNumber,\n\t\t\t\t\tthis.selectedCountry.iso2.toUpperCase()\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t} else {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t}\n\n\t\tel.focus();\n\t}\n\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\n\t\tconst allowedChars = /[0-9\\+\\-\\ ]/;\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n\t\tconst allowedOtherKeys = [\n\t\t\t'ArrowLeft',\n\t\t\t'ArrowUp',\n\t\t\t'ArrowRight',\n\t\t\t'ArrowDown',\n\t\t\t'Home',\n\t\t\t'End',\n\t\t\t'Insert',\n\t\t\t'Delete',\n\t\t\t'Backspace',\n\t\t];\n\n\t\tif (\n\t\t\t!allowedChars.test(event.key) &&\n\t\t\t!(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\n\t\t\t!allowedOtherKeys.includes(event.key)\n\t\t) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tprotected fetchCountryData(): void {\n\t\t/* Clearing the list to avoid duplicates (https://github.com/webcat12345/ngx-intl-tel-input/issues/248) */\n\t\tthis.allCountries = [];\n\n\t\tthis.countryCodeData.allCountries.forEach((c) => {\n\t\t\tconst country: Country = {\n\t\t\t\tname: c[0].toString(),\n\t\t\t\tiso2: c[1].toString(),\n\t\t\t\tdialCode: c[2].toString(),\n\t\t\t\tpriority: +c[3] || 0,\n\t\t\t\tareaCodes: (c[4] as string[]) || undefined,\n\t\t\t\thtmlId: `iti-0__item-${c[1].toString()}`,\n\t\t\t\tflagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\n\t\t\t\tplaceHolder: '',\n\t\t\t};\n\n\t\t\tif (this.enablePlaceholder) {\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(\n\t\t\t\t\tcountry.iso2.toUpperCase()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.allCountries.push(country);\n\t\t});\n\t}\n\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\n\t\ttry {\n\t\t\treturn this.phoneUtil.format(\n\t\t\t\tthis.phoneUtil.getExampleNumber(countryCode),\n\t\t\t\tlpn.PhoneNumberFormat.INTERNATIONAL\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\twriteValue(obj: any): void {\n\t\tif (obj === undefined) {\n\t\t\tthis.init();\n\t\t}\n\t\tthis.phoneNumber = obj;\n\t\tsetTimeout(() => {\n\t\t\tthis.onPhoneNumberChange();\n\t\t}, 1);\n\t}\n\n\tprivate getCountryIsoCode(\n\t\tcountryCode: number,\n\t\tnumber: lpn.PhoneNumber\n\t): string | undefined {\n\t\t// Will use this to match area code from the first numbers\n\t\tconst rawNumber = number['values_']['2'].toString();\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n\t\tconst countries = this.allCountries.filter(\n\t\t\t(c) => c.dialCode === countryCode.toString()\n\t\t);\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\n\t\tconst mainCountry = countries.find((c) => c.areaCodes === undefined);\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n\t\tconst secondaryCountries = countries.filter(\n\t\t\t(c) => c.areaCodes !== undefined\n\t\t);\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n\n\t\t/*\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n\t\t\tIf no matches found, fallback to the main country.\n\t\t*/\n\t\tsecondaryCountries.forEach((country) => {\n\t\t\tcountry.areaCodes.forEach((areaCode) => {\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\n\t\t\t\t\tmatchedCountry = country.iso2;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn matchedCountry;\n\t}\n\n\tseparateDialCodePlaceHolder(placeholder: string): string {\n\t\treturn this.removeDialCode(placeholder);\n\t}\n\n\tprivate removeDialCode(phoneNumber: string): string {\n\t\tif (this.separateDialCode && phoneNumber) {\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n\t\t}\n\t\treturn phoneNumber;\n\t}\n\n\t// adjust input alignment\n\tprivate checkSeparateDialCodeStyle() {\n\t\tif (this.separateDialCode && this.selectedCountry) {\n\t\t\tconst cntryCd = this.selectedCountry.dialCode;\n\t\t\tthis.separateDialCodeClass =\n\t\t\t\t'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n\t\t} else {\n\t\t\tthis.separateDialCodeClass = '';\n\t\t}\n\t}\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\n@Directive({\n\t// tslint:disable-next-line: directive-selector\n\tselector: '[ngModel], [formControl], [formControlName]',\n})\nexport class NativeElementInjectorDirective implements OnInit {\n\tconstructor(\n\t\tprivate controlDir: NgControl,\n\t\tprivate host: ElementRef<HTMLFormElement>\n\t) {}\n\tngOnInit() {\n\t\tif (this.controlDir.control) {\n\t\t\tthis.controlDir.control['nativeElement'] = this.host.nativeElement;\n\t\t}\n\t}\n}\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\nimport { NgxIntlTelInputService } from './ngx-intl-tel-input.service';\n\n@NgModule({\n\tdeclarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tBsDropdownModule.forRoot(),\n\t\tTooltipModule.forRoot(),\n\t],\n\texports: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n})\nexport class NgxIntlTelInputModule {\n\tstatic forRoot(): ModuleWithProviders<NgxIntlTelInputModule> {\n\t\treturn {\n\t\t\tngModule: NgxIntlTelInputModule,\n\t\t\tproviders: [NgxIntlTelInputService],\n\t\t};\n\t}\n}\n"]}